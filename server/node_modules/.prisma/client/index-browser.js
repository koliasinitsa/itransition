
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.8.0
 * Query Engine version: 0a83d8541752d7582de2ebc1ece46519ce72a848
 */
Prisma.prismaVersion = {
  client: "5.8.0",
  engine: "0a83d8541752d7582de2ebc1ece46519ce72a848"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  status: 'status',
  role: 'role'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name'
};

exports.Prisma.CollectionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  image_url: 'image_url',
  user_id: 'user_id',
  category_id: 'category_id',
  custom_string1_state: 'custom_string1_state',
  custom_string1_name: 'custom_string1_name',
  custom_string2_state: 'custom_string2_state',
  custom_string2_name: 'custom_string2_name',
  custom_string3_state: 'custom_string3_state',
  custom_string3_name: 'custom_string3_name',
  custom_int1_state: 'custom_int1_state',
  custom_int1_name: 'custom_int1_name',
  custom_int2_state: 'custom_int2_state',
  custom_int2_name: 'custom_int2_name',
  custom_int3_state: 'custom_int3_state',
  custom_int3_name: 'custom_int3_name',
  custom_text1_state: 'custom_text1_state',
  custom_text1_name: 'custom_text1_name',
  custom_text2_state: 'custom_text2_state',
  custom_text2_name: 'custom_text2_name',
  custom_text3_state: 'custom_text3_state',
  custom_text3_name: 'custom_text3_name',
  custom_boolean1_state: 'custom_boolean1_state',
  custom_boolean1_name: 'custom_boolean1_name',
  custom_boolean2_state: 'custom_boolean2_state',
  custom_boolean2_name: 'custom_boolean2_name',
  custom_boolean3_state: 'custom_boolean3_state',
  custom_boolean3_name: 'custom_boolean3_name',
  custom_date1_state: 'custom_date1_state',
  custom_date1_name: 'custom_date1_name',
  custom_date2_state: 'custom_date2_state',
  custom_date2_name: 'custom_date2_name',
  custom_date3_state: 'custom_date3_state',
  custom_date3_name: 'custom_date3_name'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  tag_name: 'tag_name'
};

exports.Prisma.ItemsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  collection_id: 'collection_id',
  custom_string1_value: 'custom_string1_value',
  custom_string2_value: 'custom_string2_value',
  custom_string3_value: 'custom_string3_value',
  custom_int1_value: 'custom_int1_value',
  custom_int2_value: 'custom_int2_value',
  custom_int3_value: 'custom_int3_value',
  custom_text1_value: 'custom_text1_value',
  custom_text2_value: 'custom_text2_value',
  custom_text3_value: 'custom_text3_value',
  custom_boolean1_value: 'custom_boolean1_value',
  custom_boolean2_value: 'custom_boolean2_value',
  custom_boolean3_value: 'custom_boolean3_value',
  custom_date1_value: 'custom_date1_value',
  custom_date2_value: 'custom_date2_value',
  custom_date3_value: 'custom_date3_value'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  user_id: 'user_id',
  item_id: 'item_id'
};

exports.Prisma.LikesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  item_id: 'item_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.user_status = exports.$Enums.user_status = {
  active: 'active',
  blocked: 'blocked',
  deleted: 'deleted'
};

exports.user_role = exports.$Enums.user_role = {
  user: 'user',
  admin: 'admin'
};

exports.Prisma.ModelName = {
  Users: 'Users',
  Categories: 'Categories',
  Collections: 'Collections',
  Tags: 'Tags',
  Items: 'Items',
  Comments: 'Comments',
  Likes: 'Likes'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)


/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Categories
 * 
 */
export type Categories = $Result.DefaultSelection<Prisma.$CategoriesPayload>
/**
 * Model Collections
 * 
 */
export type Collections = $Result.DefaultSelection<Prisma.$CollectionsPayload>
/**
 * Model Tags
 * 
 */
export type Tags = $Result.DefaultSelection<Prisma.$TagsPayload>
/**
 * Model ItemTags
 * 
 */
export type ItemTags = $Result.DefaultSelection<Prisma.$ItemTagsPayload>
/**
 * Model Items
 * 
 */
export type Items = $Result.DefaultSelection<Prisma.$ItemsPayload>
/**
 * Model Comments
 * 
 */
export type Comments = $Result.DefaultSelection<Prisma.$CommentsPayload>
/**
 * Model Likes
 * 
 */
export type Likes = $Result.DefaultSelection<Prisma.$LikesPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const user_status: {
  active: 'active',
  blocked: 'blocked',
  deleted: 'deleted'
};

export type user_status = (typeof user_status)[keyof typeof user_status]


export const user_role: {
  user: 'user',
  admin: 'admin'
};

export type user_role = (typeof user_role)[keyof typeof user_role]

}

export type user_status = $Enums.user_status

export const user_status: typeof $Enums.user_status

export type user_role = $Enums.user_role

export const user_role: typeof $Enums.user_role

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs>;

  /**
   * `prisma.categories`: Exposes CRUD operations for the **Categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.CategoriesDelegate<ExtArgs>;

  /**
   * `prisma.collections`: Exposes CRUD operations for the **Collections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections
    * const collections = await prisma.collections.findMany()
    * ```
    */
  get collections(): Prisma.CollectionsDelegate<ExtArgs>;

  /**
   * `prisma.tags`: Exposes CRUD operations for the **Tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tags.findMany()
    * ```
    */
  get tags(): Prisma.TagsDelegate<ExtArgs>;

  /**
   * `prisma.itemTags`: Exposes CRUD operations for the **ItemTags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ItemTags
    * const itemTags = await prisma.itemTags.findMany()
    * ```
    */
  get itemTags(): Prisma.ItemTagsDelegate<ExtArgs>;

  /**
   * `prisma.items`: Exposes CRUD operations for the **Items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.items.findMany()
    * ```
    */
  get items(): Prisma.ItemsDelegate<ExtArgs>;

  /**
   * `prisma.comments`: Exposes CRUD operations for the **Comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comments.findMany()
    * ```
    */
  get comments(): Prisma.CommentsDelegate<ExtArgs>;

  /**
   * `prisma.likes`: Exposes CRUD operations for the **Likes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.likes.findMany()
    * ```
    */
  get likes(): Prisma.LikesDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.8.0
   * Query Engine version: 0a83d8541752d7582de2ebc1ece46519ce72a848
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users: 'Users',
    Categories: 'Categories',
    Collections: 'Collections',
    Tags: 'Tags',
    ItemTags: 'ItemTags',
    Items: 'Items',
    Comments: 'Comments',
    Likes: 'Likes'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'users' | 'categories' | 'collections' | 'tags' | 'itemTags' | 'items' | 'comments' | 'likes'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Categories: {
        payload: Prisma.$CategoriesPayload<ExtArgs>
        fields: Prisma.CategoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          findFirst: {
            args: Prisma.CategoriesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          findMany: {
            args: Prisma.CategoriesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>[]
          }
          create: {
            args: Prisma.CategoriesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          createMany: {
            args: Prisma.CategoriesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CategoriesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          update: {
            args: Prisma.CategoriesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          deleteMany: {
            args: Prisma.CategoriesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.CategoriesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriesCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      Collections: {
        payload: Prisma.$CollectionsPayload<ExtArgs>
        fields: Prisma.CollectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CollectionsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CollectionsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          findFirst: {
            args: Prisma.CollectionsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CollectionsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          findMany: {
            args: Prisma.CollectionsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>[]
          }
          create: {
            args: Prisma.CollectionsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          createMany: {
            args: Prisma.CollectionsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CollectionsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          update: {
            args: Prisma.CollectionsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          deleteMany: {
            args: Prisma.CollectionsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CollectionsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CollectionsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CollectionsPayload>
          }
          aggregate: {
            args: Prisma.CollectionsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollections>
          }
          groupBy: {
            args: Prisma.CollectionsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CollectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.CollectionsCountArgs<ExtArgs>,
            result: $Utils.Optional<CollectionsCountAggregateOutputType> | number
          }
        }
      }
      Tags: {
        payload: Prisma.$TagsPayload<ExtArgs>
        fields: Prisma.TagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          findFirst: {
            args: Prisma.TagsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          findMany: {
            args: Prisma.TagsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>[]
          }
          create: {
            args: Prisma.TagsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          createMany: {
            args: Prisma.TagsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TagsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          update: {
            args: Prisma.TagsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          deleteMany: {
            args: Prisma.TagsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TagsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TagsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          aggregate: {
            args: Prisma.TagsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTags>
          }
          groupBy: {
            args: Prisma.TagsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagsCountArgs<ExtArgs>,
            result: $Utils.Optional<TagsCountAggregateOutputType> | number
          }
        }
      }
      ItemTags: {
        payload: Prisma.$ItemTagsPayload<ExtArgs>
        fields: Prisma.ItemTagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemTagsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemTagsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          findFirst: {
            args: Prisma.ItemTagsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemTagsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          findMany: {
            args: Prisma.ItemTagsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>[]
          }
          create: {
            args: Prisma.ItemTagsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          createMany: {
            args: Prisma.ItemTagsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ItemTagsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          update: {
            args: Prisma.ItemTagsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          deleteMany: {
            args: Prisma.ItemTagsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ItemTagsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ItemTagsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemTagsPayload>
          }
          aggregate: {
            args: Prisma.ItemTagsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateItemTags>
          }
          groupBy: {
            args: Prisma.ItemTagsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ItemTagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemTagsCountArgs<ExtArgs>,
            result: $Utils.Optional<ItemTagsCountAggregateOutputType> | number
          }
        }
      }
      Items: {
        payload: Prisma.$ItemsPayload<ExtArgs>
        fields: Prisma.ItemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          findFirst: {
            args: Prisma.ItemsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          findMany: {
            args: Prisma.ItemsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>[]
          }
          create: {
            args: Prisma.ItemsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          createMany: {
            args: Prisma.ItemsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ItemsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          update: {
            args: Prisma.ItemsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          deleteMany: {
            args: Prisma.ItemsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ItemsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ItemsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItemsPayload>
          }
          aggregate: {
            args: Prisma.ItemsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateItems>
          }
          groupBy: {
            args: Prisma.ItemsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ItemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemsCountArgs<ExtArgs>,
            result: $Utils.Optional<ItemsCountAggregateOutputType> | number
          }
        }
      }
      Comments: {
        payload: Prisma.$CommentsPayload<ExtArgs>
        fields: Prisma.CommentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          findFirst: {
            args: Prisma.CommentsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          findMany: {
            args: Prisma.CommentsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>[]
          }
          create: {
            args: Prisma.CommentsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          createMany: {
            args: Prisma.CommentsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CommentsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          update: {
            args: Prisma.CommentsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          deleteMany: {
            args: Prisma.CommentsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CommentsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CommentsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CommentsPayload>
          }
          aggregate: {
            args: Prisma.CommentsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateComments>
          }
          groupBy: {
            args: Prisma.CommentsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CommentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentsCountArgs<ExtArgs>,
            result: $Utils.Optional<CommentsCountAggregateOutputType> | number
          }
        }
      }
      Likes: {
        payload: Prisma.$LikesPayload<ExtArgs>
        fields: Prisma.LikesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LikesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LikesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          findFirst: {
            args: Prisma.LikesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LikesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          findMany: {
            args: Prisma.LikesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>[]
          }
          create: {
            args: Prisma.LikesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          createMany: {
            args: Prisma.LikesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LikesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          update: {
            args: Prisma.LikesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          deleteMany: {
            args: Prisma.LikesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LikesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LikesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LikesPayload>
          }
          aggregate: {
            args: Prisma.LikesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLikes>
          }
          groupBy: {
            args: Prisma.LikesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LikesGroupByOutputType>[]
          }
          count: {
            args: Prisma.LikesCountArgs<ExtArgs>,
            result: $Utils.Optional<LikesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    Collection: number
    Comment: number
    Like: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Collection?: boolean | UsersCountOutputTypeCountCollectionArgs
    Comment?: boolean | UsersCountOutputTypeCountCommentArgs
    Like?: boolean | UsersCountOutputTypeCountLikeArgs
  }

  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikesWhereInput
  }



  /**
   * Count Type CategoriesCountOutputType
   */

  export type CategoriesCountOutputType = {
    Collection: number
  }

  export type CategoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Collection?: boolean | CategoriesCountOutputTypeCountCollectionArgs
  }

  // Custom InputTypes

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesCountOutputType
     */
    select?: CategoriesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountCollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionsWhereInput
  }



  /**
   * Count Type CollectionsCountOutputType
   */

  export type CollectionsCountOutputType = {
    Item: number
  }

  export type CollectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Item?: boolean | CollectionsCountOutputTypeCountItemArgs
  }

  // Custom InputTypes

  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionsCountOutputType
     */
    select?: CollectionsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeCountItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemsWhereInput
  }



  /**
   * Count Type TagsCountOutputType
   */

  export type TagsCountOutputType = {
    items: number
  }

  export type TagsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | TagsCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagsCountOutputType
     */
    select?: TagsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemTagsWhereInput
  }



  /**
   * Count Type ItemsCountOutputType
   */

  export type ItemsCountOutputType = {
    tags: number
    Comment: number
    Like: number
  }

  export type ItemsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | ItemsCountOutputTypeCountTagsArgs
    Comment?: boolean | ItemsCountOutputTypeCountCommentArgs
    Like?: boolean | ItemsCountOutputTypeCountLikeArgs
  }

  // Custom InputTypes

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemsCountOutputType
     */
    select?: ItemsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemTagsWhereInput
  }


  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentsWhereInput
  }


  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountLikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikesWhereInput
  }



  /**
   * Models
   */

  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    status: $Enums.user_status | null
    role: $Enums.user_role | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    status: $Enums.user_status | null
    role: $Enums.user_role | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    password: number
    email: number
    status: number
    role: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    status?: true
    role?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    status?: true
    role?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    status?: true
    role?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    username: string
    password: string
    email: string
    status: $Enums.user_status
    role: $Enums.user_role
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    status?: boolean
    role?: boolean
    Collection?: boolean | Users$CollectionArgs<ExtArgs>
    Comment?: boolean | Users$CommentArgs<ExtArgs>
    Like?: boolean | Users$LikeArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    status?: boolean
    role?: boolean
  }

  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Collection?: boolean | Users$CollectionArgs<ExtArgs>
    Comment?: boolean | Users$CommentArgs<ExtArgs>
    Like?: boolean | Users$LikeArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      Collection: Prisma.$CollectionsPayload<ExtArgs>[]
      Comment: Prisma.$CommentsPayload<ExtArgs>[]
      Like: Prisma.$LikesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      email: string
      status: $Enums.user_status
      role: $Enums.user_role
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UsersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends UsersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsersCreateArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {UsersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UsersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends UsersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends UsersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>
    ): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Collection<T extends Users$CollectionArgs<ExtArgs> = {}>(args?: Subset<T, Users$CollectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    Comment<T extends Users$CommentArgs<ExtArgs> = {}>(args?: Subset<T, Users$CommentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findMany'> | Null>;

    Like<T extends Users$LikeArgs<ExtArgs> = {}>(args?: Subset<T, Users$LikeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Users model
   */ 
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'Int'>
    readonly username: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly email: FieldRef<"Users", 'String'>
    readonly status: FieldRef<"Users", 'user_status'>
    readonly role: FieldRef<"Users", 'user_role'>
  }
    

  // Custom InputTypes

  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }


  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }


  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }


  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
  }


  /**
   * Users.Collection
   */
  export type Users$CollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    where?: CollectionsWhereInput
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    cursor?: CollectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * Users.Comment
   */
  export type Users$CommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    where?: CommentsWhereInput
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    cursor?: CommentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }


  /**
   * Users.Like
   */
  export type Users$LikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    where?: LikesWhereInput
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    cursor?: LikesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }


  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude<ExtArgs> | null
  }



  /**
   * Model Categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriesSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: number | null
    category_name: string | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: number | null
    category_name: string | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    category_name: number
    _all: number
  }


  export type CategoriesAvgAggregateInputType = {
    id?: true
  }

  export type CategoriesSumAggregateInputType = {
    id?: true
  }

  export type CategoriesMinAggregateInputType = {
    id?: true
    category_name?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    category_name?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    category_name?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to aggregate.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type CategoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesWhereInput
    orderBy?: CategoriesOrderByWithAggregationInput | CategoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: CategoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _avg?: CategoriesAvgAggregateInputType
    _sum?: CategoriesSumAggregateInputType
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: number
    category_name: string
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends CategoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type CategoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category_name?: boolean
    Collection?: boolean | Categories$CollectionArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type CategoriesSelectScalar = {
    id?: boolean
    category_name?: boolean
  }

  export type CategoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Collection?: boolean | Categories$CollectionArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CategoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categories"
    objects: {
      Collection: Prisma.$CollectionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      category_name: string
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }


  type CategoriesGetPayload<S extends boolean | null | undefined | CategoriesDefaultArgs> = $Result.GetResult<Prisma.$CategoriesPayload, S>

  type CategoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface CategoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categories'], meta: { name: 'Categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {CategoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Categories that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CategoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Categories.
     * @param {CategoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
    **/
    create<T extends CategoriesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesCreateArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Categories.
     *     @param {CategoriesCreateManyArgs} args - Arguments to create many Categories.
     *     @example
     *     // Create many Categories
     *     const categories = await prisma.categories.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CategoriesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categories.
     * @param {CategoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
    **/
    delete<T extends CategoriesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesDeleteArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Categories.
     * @param {CategoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpdateArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categories.
     * @param {CategoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpsertArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoriesCountArgs>(
      args?: Subset<T, CategoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriesGroupByArgs['orderBy'] }
        : { orderBy?: CategoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categories model
   */
  readonly fields: CategoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Collection<T extends Categories$CollectionArgs<ExtArgs> = {}>(args?: Subset<T, Categories$CollectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Categories model
   */ 
  interface CategoriesFieldRefs {
    readonly id: FieldRef<"Categories", 'Int'>
    readonly category_name: FieldRef<"Categories", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Categories findUnique
   */
  export type CategoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories findUniqueOrThrow
   */
  export type CategoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories findFirst
   */
  export type CategoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories findFirstOrThrow
   */
  export type CategoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories findMany
   */
  export type CategoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories create
   */
  export type CategoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a Categories.
     */
    data: XOR<CategoriesCreateInput, CategoriesUncheckedCreateInput>
  }


  /**
   * Categories createMany
   */
  export type CategoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoriesCreateManyInput | CategoriesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Categories update
   */
  export type CategoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a Categories.
     */
    data: XOR<CategoriesUpdateInput, CategoriesUncheckedUpdateInput>
    /**
     * Choose, which Categories to update.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories updateMany
   */
  export type CategoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoriesUpdateManyMutationInput, CategoriesUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoriesWhereInput
  }


  /**
   * Categories upsert
   */
  export type CategoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the Categories to update in case it exists.
     */
    where: CategoriesWhereUniqueInput
    /**
     * In case the Categories found by the `where` argument doesn't exist, create a new Categories with this data.
     */
    create: XOR<CategoriesCreateInput, CategoriesUncheckedCreateInput>
    /**
     * In case the Categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriesUpdateInput, CategoriesUncheckedUpdateInput>
  }


  /**
   * Categories delete
   */
  export type CategoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter which Categories to delete.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories deleteMany
   */
  export type CategoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoriesWhereInput
  }


  /**
   * Categories.Collection
   */
  export type Categories$CollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    where?: CollectionsWhereInput
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    cursor?: CollectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * Categories without action
   */
  export type CategoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
  }



  /**
   * Model Collections
   */

  export type AggregateCollections = {
    _count: CollectionsCountAggregateOutputType | null
    _avg: CollectionsAvgAggregateOutputType | null
    _sum: CollectionsSumAggregateOutputType | null
    _min: CollectionsMinAggregateOutputType | null
    _max: CollectionsMaxAggregateOutputType | null
  }

  export type CollectionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    category_id: number | null
  }

  export type CollectionsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    category_id: number | null
  }

  export type CollectionsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    image_url: string | null
    user_id: number | null
    category_id: number | null
    custom_string1_state: boolean | null
    custom_string1_name: string | null
    custom_string2_state: boolean | null
    custom_string2_name: string | null
    custom_string3_state: boolean | null
    custom_string3_name: string | null
    custom_int1_state: boolean | null
    custom_int1_name: string | null
    custom_int2_state: boolean | null
    custom_int2_name: string | null
    custom_int3_state: boolean | null
    custom_int3_name: string | null
    custom_text1_state: boolean | null
    custom_text1_name: string | null
    custom_text2_state: boolean | null
    custom_text2_name: string | null
    custom_text3_state: boolean | null
    custom_text3_name: string | null
    custom_boolean1_state: boolean | null
    custom_boolean1_name: string | null
    custom_boolean2_state: boolean | null
    custom_boolean2_name: string | null
    custom_boolean3_state: boolean | null
    custom_boolean3_name: string | null
    custom_date1_state: boolean | null
    custom_date1_name: string | null
    custom_date2_state: boolean | null
    custom_date2_name: string | null
    custom_date3_state: boolean | null
    custom_date3_name: string | null
  }

  export type CollectionsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    image_url: string | null
    user_id: number | null
    category_id: number | null
    custom_string1_state: boolean | null
    custom_string1_name: string | null
    custom_string2_state: boolean | null
    custom_string2_name: string | null
    custom_string3_state: boolean | null
    custom_string3_name: string | null
    custom_int1_state: boolean | null
    custom_int1_name: string | null
    custom_int2_state: boolean | null
    custom_int2_name: string | null
    custom_int3_state: boolean | null
    custom_int3_name: string | null
    custom_text1_state: boolean | null
    custom_text1_name: string | null
    custom_text2_state: boolean | null
    custom_text2_name: string | null
    custom_text3_state: boolean | null
    custom_text3_name: string | null
    custom_boolean1_state: boolean | null
    custom_boolean1_name: string | null
    custom_boolean2_state: boolean | null
    custom_boolean2_name: string | null
    custom_boolean3_state: boolean | null
    custom_boolean3_name: string | null
    custom_date1_state: boolean | null
    custom_date1_name: string | null
    custom_date2_state: boolean | null
    custom_date2_name: string | null
    custom_date3_state: boolean | null
    custom_date3_name: string | null
  }

  export type CollectionsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    image_url: number
    user_id: number
    category_id: number
    custom_string1_state: number
    custom_string1_name: number
    custom_string2_state: number
    custom_string2_name: number
    custom_string3_state: number
    custom_string3_name: number
    custom_int1_state: number
    custom_int1_name: number
    custom_int2_state: number
    custom_int2_name: number
    custom_int3_state: number
    custom_int3_name: number
    custom_text1_state: number
    custom_text1_name: number
    custom_text2_state: number
    custom_text2_name: number
    custom_text3_state: number
    custom_text3_name: number
    custom_boolean1_state: number
    custom_boolean1_name: number
    custom_boolean2_state: number
    custom_boolean2_name: number
    custom_boolean3_state: number
    custom_boolean3_name: number
    custom_date1_state: number
    custom_date1_name: number
    custom_date2_state: number
    custom_date2_name: number
    custom_date3_state: number
    custom_date3_name: number
    _all: number
  }


  export type CollectionsAvgAggregateInputType = {
    id?: true
    user_id?: true
    category_id?: true
  }

  export type CollectionsSumAggregateInputType = {
    id?: true
    user_id?: true
    category_id?: true
  }

  export type CollectionsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    image_url?: true
    user_id?: true
    category_id?: true
    custom_string1_state?: true
    custom_string1_name?: true
    custom_string2_state?: true
    custom_string2_name?: true
    custom_string3_state?: true
    custom_string3_name?: true
    custom_int1_state?: true
    custom_int1_name?: true
    custom_int2_state?: true
    custom_int2_name?: true
    custom_int3_state?: true
    custom_int3_name?: true
    custom_text1_state?: true
    custom_text1_name?: true
    custom_text2_state?: true
    custom_text2_name?: true
    custom_text3_state?: true
    custom_text3_name?: true
    custom_boolean1_state?: true
    custom_boolean1_name?: true
    custom_boolean2_state?: true
    custom_boolean2_name?: true
    custom_boolean3_state?: true
    custom_boolean3_name?: true
    custom_date1_state?: true
    custom_date1_name?: true
    custom_date2_state?: true
    custom_date2_name?: true
    custom_date3_state?: true
    custom_date3_name?: true
  }

  export type CollectionsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    image_url?: true
    user_id?: true
    category_id?: true
    custom_string1_state?: true
    custom_string1_name?: true
    custom_string2_state?: true
    custom_string2_name?: true
    custom_string3_state?: true
    custom_string3_name?: true
    custom_int1_state?: true
    custom_int1_name?: true
    custom_int2_state?: true
    custom_int2_name?: true
    custom_int3_state?: true
    custom_int3_name?: true
    custom_text1_state?: true
    custom_text1_name?: true
    custom_text2_state?: true
    custom_text2_name?: true
    custom_text3_state?: true
    custom_text3_name?: true
    custom_boolean1_state?: true
    custom_boolean1_name?: true
    custom_boolean2_state?: true
    custom_boolean2_name?: true
    custom_boolean3_state?: true
    custom_boolean3_name?: true
    custom_date1_state?: true
    custom_date1_name?: true
    custom_date2_state?: true
    custom_date2_name?: true
    custom_date3_state?: true
    custom_date3_name?: true
  }

  export type CollectionsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    image_url?: true
    user_id?: true
    category_id?: true
    custom_string1_state?: true
    custom_string1_name?: true
    custom_string2_state?: true
    custom_string2_name?: true
    custom_string3_state?: true
    custom_string3_name?: true
    custom_int1_state?: true
    custom_int1_name?: true
    custom_int2_state?: true
    custom_int2_name?: true
    custom_int3_state?: true
    custom_int3_name?: true
    custom_text1_state?: true
    custom_text1_name?: true
    custom_text2_state?: true
    custom_text2_name?: true
    custom_text3_state?: true
    custom_text3_name?: true
    custom_boolean1_state?: true
    custom_boolean1_name?: true
    custom_boolean2_state?: true
    custom_boolean2_name?: true
    custom_boolean3_state?: true
    custom_boolean3_name?: true
    custom_date1_state?: true
    custom_date1_name?: true
    custom_date2_state?: true
    custom_date2_name?: true
    custom_date3_state?: true
    custom_date3_name?: true
    _all?: true
  }

  export type CollectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collections to aggregate.
     */
    where?: CollectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CollectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Collections
    **/
    _count?: true | CollectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CollectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CollectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionsMaxAggregateInputType
  }

  export type GetCollectionsAggregateType<T extends CollectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateCollections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollections[P]>
      : GetScalarType<T[P], AggregateCollections[P]>
  }




  export type CollectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionsWhereInput
    orderBy?: CollectionsOrderByWithAggregationInput | CollectionsOrderByWithAggregationInput[]
    by: CollectionsScalarFieldEnum[] | CollectionsScalarFieldEnum
    having?: CollectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionsCountAggregateInputType | true
    _avg?: CollectionsAvgAggregateInputType
    _sum?: CollectionsSumAggregateInputType
    _min?: CollectionsMinAggregateInputType
    _max?: CollectionsMaxAggregateInputType
  }

  export type CollectionsGroupByOutputType = {
    id: number
    name: string
    description: string | null
    image_url: string
    user_id: number
    category_id: number
    custom_string1_state: boolean
    custom_string1_name: string | null
    custom_string2_state: boolean
    custom_string2_name: string | null
    custom_string3_state: boolean
    custom_string3_name: string | null
    custom_int1_state: boolean
    custom_int1_name: string | null
    custom_int2_state: boolean
    custom_int2_name: string | null
    custom_int3_state: boolean
    custom_int3_name: string | null
    custom_text1_state: boolean
    custom_text1_name: string | null
    custom_text2_state: boolean
    custom_text2_name: string | null
    custom_text3_state: boolean
    custom_text3_name: string | null
    custom_boolean1_state: boolean
    custom_boolean1_name: string | null
    custom_boolean2_state: boolean
    custom_boolean2_name: string | null
    custom_boolean3_state: boolean
    custom_boolean3_name: string | null
    custom_date1_state: boolean
    custom_date1_name: string | null
    custom_date2_state: boolean
    custom_date2_name: string | null
    custom_date3_state: boolean
    custom_date3_name: string | null
    _count: CollectionsCountAggregateOutputType | null
    _avg: CollectionsAvgAggregateOutputType | null
    _sum: CollectionsSumAggregateOutputType | null
    _min: CollectionsMinAggregateOutputType | null
    _max: CollectionsMaxAggregateOutputType | null
  }

  type GetCollectionsGroupByPayload<T extends CollectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectionsGroupByOutputType[P]>
            : GetScalarType<T[P], CollectionsGroupByOutputType[P]>
        }
      >
    >


  export type CollectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    image_url?: boolean
    user_id?: boolean
    category_id?: boolean
    custom_string1_state?: boolean
    custom_string1_name?: boolean
    custom_string2_state?: boolean
    custom_string2_name?: boolean
    custom_string3_state?: boolean
    custom_string3_name?: boolean
    custom_int1_state?: boolean
    custom_int1_name?: boolean
    custom_int2_state?: boolean
    custom_int2_name?: boolean
    custom_int3_state?: boolean
    custom_int3_name?: boolean
    custom_text1_state?: boolean
    custom_text1_name?: boolean
    custom_text2_state?: boolean
    custom_text2_name?: boolean
    custom_text3_state?: boolean
    custom_text3_name?: boolean
    custom_boolean1_state?: boolean
    custom_boolean1_name?: boolean
    custom_boolean2_state?: boolean
    custom_boolean2_name?: boolean
    custom_boolean3_state?: boolean
    custom_boolean3_name?: boolean
    custom_date1_state?: boolean
    custom_date1_name?: boolean
    custom_date2_state?: boolean
    custom_date2_name?: boolean
    custom_date3_state?: boolean
    custom_date3_name?: boolean
    User?: boolean | UsersDefaultArgs<ExtArgs>
    category?: boolean | CategoriesDefaultArgs<ExtArgs>
    Item?: boolean | Collections$ItemArgs<ExtArgs>
    _count?: boolean | CollectionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collections"]>

  export type CollectionsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    image_url?: boolean
    user_id?: boolean
    category_id?: boolean
    custom_string1_state?: boolean
    custom_string1_name?: boolean
    custom_string2_state?: boolean
    custom_string2_name?: boolean
    custom_string3_state?: boolean
    custom_string3_name?: boolean
    custom_int1_state?: boolean
    custom_int1_name?: boolean
    custom_int2_state?: boolean
    custom_int2_name?: boolean
    custom_int3_state?: boolean
    custom_int3_name?: boolean
    custom_text1_state?: boolean
    custom_text1_name?: boolean
    custom_text2_state?: boolean
    custom_text2_name?: boolean
    custom_text3_state?: boolean
    custom_text3_name?: boolean
    custom_boolean1_state?: boolean
    custom_boolean1_name?: boolean
    custom_boolean2_state?: boolean
    custom_boolean2_name?: boolean
    custom_boolean3_state?: boolean
    custom_boolean3_name?: boolean
    custom_date1_state?: boolean
    custom_date1_name?: boolean
    custom_date2_state?: boolean
    custom_date2_name?: boolean
    custom_date3_state?: boolean
    custom_date3_name?: boolean
  }

  export type CollectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UsersDefaultArgs<ExtArgs>
    category?: boolean | CategoriesDefaultArgs<ExtArgs>
    Item?: boolean | Collections$ItemArgs<ExtArgs>
    _count?: boolean | CollectionsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CollectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Collections"
    objects: {
      User: Prisma.$UsersPayload<ExtArgs>
      category: Prisma.$CategoriesPayload<ExtArgs>
      Item: Prisma.$ItemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      image_url: string
      user_id: number
      category_id: number
      custom_string1_state: boolean
      custom_string1_name: string | null
      custom_string2_state: boolean
      custom_string2_name: string | null
      custom_string3_state: boolean
      custom_string3_name: string | null
      custom_int1_state: boolean
      custom_int1_name: string | null
      custom_int2_state: boolean
      custom_int2_name: string | null
      custom_int3_state: boolean
      custom_int3_name: string | null
      custom_text1_state: boolean
      custom_text1_name: string | null
      custom_text2_state: boolean
      custom_text2_name: string | null
      custom_text3_state: boolean
      custom_text3_name: string | null
      custom_boolean1_state: boolean
      custom_boolean1_name: string | null
      custom_boolean2_state: boolean
      custom_boolean2_name: string | null
      custom_boolean3_state: boolean
      custom_boolean3_name: string | null
      custom_date1_state: boolean
      custom_date1_name: string | null
      custom_date2_state: boolean
      custom_date2_name: string | null
      custom_date3_state: boolean
      custom_date3_name: string | null
    }, ExtArgs["result"]["collections"]>
    composites: {}
  }


  type CollectionsGetPayload<S extends boolean | null | undefined | CollectionsDefaultArgs> = $Result.GetResult<Prisma.$CollectionsPayload, S>

  type CollectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CollectionsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CollectionsCountAggregateInputType | true
    }

  export interface CollectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Collections'], meta: { name: 'Collections' } }
    /**
     * Find zero or one Collections that matches the filter.
     * @param {CollectionsFindUniqueArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CollectionsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsFindUniqueArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collections that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CollectionsFindUniqueOrThrowArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CollectionsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsFindFirstArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CollectionsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsFindFirstArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsFindFirstOrThrowArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CollectionsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections
     * const collections = await prisma.collections.findMany()
     * 
     * // Get first 10 Collections
     * const collections = await prisma.collections.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectionsWithIdOnly = await prisma.collections.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CollectionsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collections.
     * @param {CollectionsCreateArgs} args - Arguments to create a Collections.
     * @example
     * // Create one Collections
     * const Collections = await prisma.collections.create({
     *   data: {
     *     // ... data to create a Collections
     *   }
     * })
     * 
    **/
    create<T extends CollectionsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsCreateArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collections.
     *     @param {CollectionsCreateManyArgs} args - Arguments to create many Collections.
     *     @example
     *     // Create many Collections
     *     const collections = await prisma.collections.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CollectionsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collections.
     * @param {CollectionsDeleteArgs} args - Arguments to delete one Collections.
     * @example
     * // Delete one Collections
     * const Collections = await prisma.collections.delete({
     *   where: {
     *     // ... filter to delete one Collections
     *   }
     * })
     * 
    **/
    delete<T extends CollectionsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsDeleteArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collections.
     * @param {CollectionsUpdateArgs} args - Arguments to update one Collections.
     * @example
     * // Update one Collections
     * const collections = await prisma.collections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CollectionsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsUpdateArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collections.
     * @param {CollectionsDeleteManyArgs} args - Arguments to filter Collections to delete.
     * @example
     * // Delete a few Collections
     * const { count } = await prisma.collections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CollectionsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CollectionsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections
     * const collections = await prisma.collections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CollectionsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collections.
     * @param {CollectionsUpsertArgs} args - Arguments to update or create a Collections.
     * @example
     * // Update or create a Collections
     * const collections = await prisma.collections.upsert({
     *   create: {
     *     // ... data to create a Collections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collections we want to update
     *   }
     * })
    **/
    upsert<T extends CollectionsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CollectionsUpsertArgs<ExtArgs>>
    ): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsCountArgs} args - Arguments to filter Collections to count.
     * @example
     * // Count the number of Collections
     * const count = await prisma.collections.count({
     *   where: {
     *     // ... the filter for the Collections we want to count
     *   }
     * })
    **/
    count<T extends CollectionsCountArgs>(
      args?: Subset<T, CollectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionsAggregateArgs>(args: Subset<T, CollectionsAggregateArgs>): Prisma.PrismaPromise<GetCollectionsAggregateType<T>>

    /**
     * Group by Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CollectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CollectionsGroupByArgs['orderBy'] }
        : { orderBy?: CollectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CollectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Collections model
   */
  readonly fields: CollectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Collections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CollectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    User<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    category<T extends CategoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriesDefaultArgs<ExtArgs>>): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Item<T extends Collections$ItemArgs<ExtArgs> = {}>(args?: Subset<T, Collections$ItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Collections model
   */ 
  interface CollectionsFieldRefs {
    readonly id: FieldRef<"Collections", 'Int'>
    readonly name: FieldRef<"Collections", 'String'>
    readonly description: FieldRef<"Collections", 'String'>
    readonly image_url: FieldRef<"Collections", 'String'>
    readonly user_id: FieldRef<"Collections", 'Int'>
    readonly category_id: FieldRef<"Collections", 'Int'>
    readonly custom_string1_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_string1_name: FieldRef<"Collections", 'String'>
    readonly custom_string2_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_string2_name: FieldRef<"Collections", 'String'>
    readonly custom_string3_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_string3_name: FieldRef<"Collections", 'String'>
    readonly custom_int1_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_int1_name: FieldRef<"Collections", 'String'>
    readonly custom_int2_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_int2_name: FieldRef<"Collections", 'String'>
    readonly custom_int3_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_int3_name: FieldRef<"Collections", 'String'>
    readonly custom_text1_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_text1_name: FieldRef<"Collections", 'String'>
    readonly custom_text2_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_text2_name: FieldRef<"Collections", 'String'>
    readonly custom_text3_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_text3_name: FieldRef<"Collections", 'String'>
    readonly custom_boolean1_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_boolean1_name: FieldRef<"Collections", 'String'>
    readonly custom_boolean2_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_boolean2_name: FieldRef<"Collections", 'String'>
    readonly custom_boolean3_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_boolean3_name: FieldRef<"Collections", 'String'>
    readonly custom_date1_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_date1_name: FieldRef<"Collections", 'String'>
    readonly custom_date2_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_date2_name: FieldRef<"Collections", 'String'>
    readonly custom_date3_state: FieldRef<"Collections", 'Boolean'>
    readonly custom_date3_name: FieldRef<"Collections", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Collections findUnique
   */
  export type CollectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where: CollectionsWhereUniqueInput
  }


  /**
   * Collections findUniqueOrThrow
   */
  export type CollectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where: CollectionsWhereUniqueInput
  }


  /**
   * Collections findFirst
   */
  export type CollectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where?: CollectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * Collections findFirstOrThrow
   */
  export type CollectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where?: CollectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * Collections findMany
   */
  export type CollectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where?: CollectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionsOrderByWithRelationInput | CollectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Collections.
     */
    cursor?: CollectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * Collections create
   */
  export type CollectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a Collections.
     */
    data: XOR<CollectionsCreateInput, CollectionsUncheckedCreateInput>
  }


  /**
   * Collections createMany
   */
  export type CollectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Collections.
     */
    data: CollectionsCreateManyInput | CollectionsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Collections update
   */
  export type CollectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a Collections.
     */
    data: XOR<CollectionsUpdateInput, CollectionsUncheckedUpdateInput>
    /**
     * Choose, which Collections to update.
     */
    where: CollectionsWhereUniqueInput
  }


  /**
   * Collections updateMany
   */
  export type CollectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Collections.
     */
    data: XOR<CollectionsUpdateManyMutationInput, CollectionsUncheckedUpdateManyInput>
    /**
     * Filter which Collections to update
     */
    where?: CollectionsWhereInput
  }


  /**
   * Collections upsert
   */
  export type CollectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the Collections to update in case it exists.
     */
    where: CollectionsWhereUniqueInput
    /**
     * In case the Collections found by the `where` argument doesn't exist, create a new Collections with this data.
     */
    create: XOR<CollectionsCreateInput, CollectionsUncheckedCreateInput>
    /**
     * In case the Collections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CollectionsUpdateInput, CollectionsUncheckedUpdateInput>
  }


  /**
   * Collections delete
   */
  export type CollectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
    /**
     * Filter which Collections to delete.
     */
    where: CollectionsWhereUniqueInput
  }


  /**
   * Collections deleteMany
   */
  export type CollectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collections to delete
     */
    where?: CollectionsWhereInput
  }


  /**
   * Collections.Item
   */
  export type Collections$ItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    where?: ItemsWhereInput
    orderBy?: ItemsOrderByWithRelationInput | ItemsOrderByWithRelationInput[]
    cursor?: ItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }


  /**
   * Collections without action
   */
  export type CollectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collections
     */
    select?: CollectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CollectionsInclude<ExtArgs> | null
  }



  /**
   * Model Tags
   */

  export type AggregateTags = {
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  export type TagsAvgAggregateOutputType = {
    id: number | null
  }

  export type TagsSumAggregateOutputType = {
    id: number | null
  }

  export type TagsMinAggregateOutputType = {
    id: number | null
    tag_name: string | null
  }

  export type TagsMaxAggregateOutputType = {
    id: number | null
    tag_name: string | null
  }

  export type TagsCountAggregateOutputType = {
    id: number
    tag_name: number
    _all: number
  }


  export type TagsAvgAggregateInputType = {
    id?: true
  }

  export type TagsSumAggregateInputType = {
    id?: true
  }

  export type TagsMinAggregateInputType = {
    id?: true
    tag_name?: true
  }

  export type TagsMaxAggregateInputType = {
    id?: true
    tag_name?: true
  }

  export type TagsCountAggregateInputType = {
    id?: true
    tag_name?: true
    _all?: true
  }

  export type TagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to aggregate.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagsMaxAggregateInputType
  }

  export type GetTagsAggregateType<T extends TagsAggregateArgs> = {
        [P in keyof T & keyof AggregateTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTags[P]>
      : GetScalarType<T[P], AggregateTags[P]>
  }




  export type TagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagsWhereInput
    orderBy?: TagsOrderByWithAggregationInput | TagsOrderByWithAggregationInput[]
    by: TagsScalarFieldEnum[] | TagsScalarFieldEnum
    having?: TagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagsCountAggregateInputType | true
    _avg?: TagsAvgAggregateInputType
    _sum?: TagsSumAggregateInputType
    _min?: TagsMinAggregateInputType
    _max?: TagsMaxAggregateInputType
  }

  export type TagsGroupByOutputType = {
    id: number
    tag_name: string
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  type GetTagsGroupByPayload<T extends TagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagsGroupByOutputType[P]>
            : GetScalarType<T[P], TagsGroupByOutputType[P]>
        }
      >
    >


  export type TagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tag_name?: boolean
    items?: boolean | Tags$itemsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tags"]>

  export type TagsSelectScalar = {
    id?: boolean
    tag_name?: boolean
  }

  export type TagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Tags$itemsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $TagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tags"
    objects: {
      items: Prisma.$ItemTagsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tag_name: string
    }, ExtArgs["result"]["tags"]>
    composites: {}
  }


  type TagsGetPayload<S extends boolean | null | undefined | TagsDefaultArgs> = $Result.GetResult<Prisma.$TagsPayload, S>

  type TagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TagsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TagsCountAggregateInputType | true
    }

  export interface TagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tags'], meta: { name: 'Tags' } }
    /**
     * Find zero or one Tags that matches the filter.
     * @param {TagsFindUniqueArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TagsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TagsFindUniqueArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tags that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TagsFindUniqueOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TagsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindFirstArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TagsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsFindFirstArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindFirstOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TagsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tags.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tags.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagsWithIdOnly = await prisma.tags.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TagsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tags.
     * @param {TagsCreateArgs} args - Arguments to create a Tags.
     * @example
     * // Create one Tags
     * const Tags = await prisma.tags.create({
     *   data: {
     *     // ... data to create a Tags
     *   }
     * })
     * 
    **/
    create<T extends TagsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TagsCreateArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tags.
     *     @param {TagsCreateManyArgs} args - Arguments to create many Tags.
     *     @example
     *     // Create many Tags
     *     const tags = await prisma.tags.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TagsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tags.
     * @param {TagsDeleteArgs} args - Arguments to delete one Tags.
     * @example
     * // Delete one Tags
     * const Tags = await prisma.tags.delete({
     *   where: {
     *     // ... filter to delete one Tags
     *   }
     * })
     * 
    **/
    delete<T extends TagsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TagsDeleteArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tags.
     * @param {TagsUpdateArgs} args - Arguments to update one Tags.
     * @example
     * // Update one Tags
     * const tags = await prisma.tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TagsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TagsUpdateArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tags.
     * @param {TagsDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TagsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TagsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TagsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TagsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tags.
     * @param {TagsUpsertArgs} args - Arguments to update or create a Tags.
     * @example
     * // Update or create a Tags
     * const tags = await prisma.tags.upsert({
     *   create: {
     *     // ... data to create a Tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tags we want to update
     *   }
     * })
    **/
    upsert<T extends TagsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TagsUpsertArgs<ExtArgs>>
    ): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tags.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagsCountArgs>(
      args?: Subset<T, TagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagsAggregateArgs>(args: Subset<T, TagsAggregateArgs>): Prisma.PrismaPromise<GetTagsAggregateType<T>>

    /**
     * Group by Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagsGroupByArgs['orderBy'] }
        : { orderBy?: TagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tags model
   */
  readonly fields: TagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    items<T extends Tags$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Tags$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Tags model
   */ 
  interface TagsFieldRefs {
    readonly id: FieldRef<"Tags", 'Int'>
    readonly tag_name: FieldRef<"Tags", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Tags findUnique
   */
  export type TagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where: TagsWhereUniqueInput
  }


  /**
   * Tags findUniqueOrThrow
   */
  export type TagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where: TagsWhereUniqueInput
  }


  /**
   * Tags findFirst
   */
  export type TagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }


  /**
   * Tags findFirstOrThrow
   */
  export type TagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }


  /**
   * Tags findMany
   */
  export type TagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }


  /**
   * Tags create
   */
  export type TagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The data needed to create a Tags.
     */
    data: XOR<TagsCreateInput, TagsUncheckedCreateInput>
  }


  /**
   * Tags createMany
   */
  export type TagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagsCreateManyInput | TagsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Tags update
   */
  export type TagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The data needed to update a Tags.
     */
    data: XOR<TagsUpdateInput, TagsUncheckedUpdateInput>
    /**
     * Choose, which Tags to update.
     */
    where: TagsWhereUniqueInput
  }


  /**
   * Tags updateMany
   */
  export type TagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagsUpdateManyMutationInput, TagsUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagsWhereInput
  }


  /**
   * Tags upsert
   */
  export type TagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The filter to search for the Tags to update in case it exists.
     */
    where: TagsWhereUniqueInput
    /**
     * In case the Tags found by the `where` argument doesn't exist, create a new Tags with this data.
     */
    create: XOR<TagsCreateInput, TagsUncheckedCreateInput>
    /**
     * In case the Tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagsUpdateInput, TagsUncheckedUpdateInput>
  }


  /**
   * Tags delete
   */
  export type TagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter which Tags to delete.
     */
    where: TagsWhereUniqueInput
  }


  /**
   * Tags deleteMany
   */
  export type TagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagsWhereInput
  }


  /**
   * Tags.items
   */
  export type Tags$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    where?: ItemTagsWhereInput
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    cursor?: ItemTagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemTagsScalarFieldEnum | ItemTagsScalarFieldEnum[]
  }


  /**
   * Tags without action
   */
  export type TagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TagsInclude<ExtArgs> | null
  }



  /**
   * Model ItemTags
   */

  export type AggregateItemTags = {
    _count: ItemTagsCountAggregateOutputType | null
    _avg: ItemTagsAvgAggregateOutputType | null
    _sum: ItemTagsSumAggregateOutputType | null
    _min: ItemTagsMinAggregateOutputType | null
    _max: ItemTagsMaxAggregateOutputType | null
  }

  export type ItemTagsAvgAggregateOutputType = {
    tag_id: number | null
    item_id: number | null
  }

  export type ItemTagsSumAggregateOutputType = {
    tag_id: number | null
    item_id: number | null
  }

  export type ItemTagsMinAggregateOutputType = {
    tag_id: number | null
    item_id: number | null
  }

  export type ItemTagsMaxAggregateOutputType = {
    tag_id: number | null
    item_id: number | null
  }

  export type ItemTagsCountAggregateOutputType = {
    tag_id: number
    item_id: number
    _all: number
  }


  export type ItemTagsAvgAggregateInputType = {
    tag_id?: true
    item_id?: true
  }

  export type ItemTagsSumAggregateInputType = {
    tag_id?: true
    item_id?: true
  }

  export type ItemTagsMinAggregateInputType = {
    tag_id?: true
    item_id?: true
  }

  export type ItemTagsMaxAggregateInputType = {
    tag_id?: true
    item_id?: true
  }

  export type ItemTagsCountAggregateInputType = {
    tag_id?: true
    item_id?: true
    _all?: true
  }

  export type ItemTagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemTags to aggregate.
     */
    where?: ItemTagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemTags to fetch.
     */
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemTagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ItemTags
    **/
    _count?: true | ItemTagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemTagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemTagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemTagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemTagsMaxAggregateInputType
  }

  export type GetItemTagsAggregateType<T extends ItemTagsAggregateArgs> = {
        [P in keyof T & keyof AggregateItemTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItemTags[P]>
      : GetScalarType<T[P], AggregateItemTags[P]>
  }




  export type ItemTagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemTagsWhereInput
    orderBy?: ItemTagsOrderByWithAggregationInput | ItemTagsOrderByWithAggregationInput[]
    by: ItemTagsScalarFieldEnum[] | ItemTagsScalarFieldEnum
    having?: ItemTagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemTagsCountAggregateInputType | true
    _avg?: ItemTagsAvgAggregateInputType
    _sum?: ItemTagsSumAggregateInputType
    _min?: ItemTagsMinAggregateInputType
    _max?: ItemTagsMaxAggregateInputType
  }

  export type ItemTagsGroupByOutputType = {
    tag_id: number
    item_id: number
    _count: ItemTagsCountAggregateOutputType | null
    _avg: ItemTagsAvgAggregateOutputType | null
    _sum: ItemTagsSumAggregateOutputType | null
    _min: ItemTagsMinAggregateOutputType | null
    _max: ItemTagsMaxAggregateOutputType | null
  }

  type GetItemTagsGroupByPayload<T extends ItemTagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemTagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemTagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemTagsGroupByOutputType[P]>
            : GetScalarType<T[P], ItemTagsGroupByOutputType[P]>
        }
      >
    >


  export type ItemTagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tag_id?: boolean
    item_id?: boolean
    tags?: boolean | TagsDefaultArgs<ExtArgs>
    items?: boolean | ItemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemTags"]>

  export type ItemTagsSelectScalar = {
    tag_id?: boolean
    item_id?: boolean
  }

  export type ItemTagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | TagsDefaultArgs<ExtArgs>
    items?: boolean | ItemsDefaultArgs<ExtArgs>
  }


  export type $ItemTagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ItemTags"
    objects: {
      tags: Prisma.$TagsPayload<ExtArgs>
      items: Prisma.$ItemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      tag_id: number
      item_id: number
    }, ExtArgs["result"]["itemTags"]>
    composites: {}
  }


  type ItemTagsGetPayload<S extends boolean | null | undefined | ItemTagsDefaultArgs> = $Result.GetResult<Prisma.$ItemTagsPayload, S>

  type ItemTagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ItemTagsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ItemTagsCountAggregateInputType | true
    }

  export interface ItemTagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ItemTags'], meta: { name: 'ItemTags' } }
    /**
     * Find zero or one ItemTags that matches the filter.
     * @param {ItemTagsFindUniqueArgs} args - Arguments to find a ItemTags
     * @example
     * // Get one ItemTags
     * const itemTags = await prisma.itemTags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ItemTagsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsFindUniqueArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ItemTags that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ItemTagsFindUniqueOrThrowArgs} args - Arguments to find a ItemTags
     * @example
     * // Get one ItemTags
     * const itemTags = await prisma.itemTags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ItemTagsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ItemTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsFindFirstArgs} args - Arguments to find a ItemTags
     * @example
     * // Get one ItemTags
     * const itemTags = await prisma.itemTags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ItemTagsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsFindFirstArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ItemTags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsFindFirstOrThrowArgs} args - Arguments to find a ItemTags
     * @example
     * // Get one ItemTags
     * const itemTags = await prisma.itemTags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ItemTagsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ItemTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ItemTags
     * const itemTags = await prisma.itemTags.findMany()
     * 
     * // Get first 10 ItemTags
     * const itemTags = await prisma.itemTags.findMany({ take: 10 })
     * 
     * // Only select the `tag_id`
     * const itemTagsWithTag_idOnly = await prisma.itemTags.findMany({ select: { tag_id: true } })
     * 
    **/
    findMany<T extends ItemTagsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ItemTags.
     * @param {ItemTagsCreateArgs} args - Arguments to create a ItemTags.
     * @example
     * // Create one ItemTags
     * const ItemTags = await prisma.itemTags.create({
     *   data: {
     *     // ... data to create a ItemTags
     *   }
     * })
     * 
    **/
    create<T extends ItemTagsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsCreateArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ItemTags.
     *     @param {ItemTagsCreateManyArgs} args - Arguments to create many ItemTags.
     *     @example
     *     // Create many ItemTags
     *     const itemTags = await prisma.itemTags.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ItemTagsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ItemTags.
     * @param {ItemTagsDeleteArgs} args - Arguments to delete one ItemTags.
     * @example
     * // Delete one ItemTags
     * const ItemTags = await prisma.itemTags.delete({
     *   where: {
     *     // ... filter to delete one ItemTags
     *   }
     * })
     * 
    **/
    delete<T extends ItemTagsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsDeleteArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ItemTags.
     * @param {ItemTagsUpdateArgs} args - Arguments to update one ItemTags.
     * @example
     * // Update one ItemTags
     * const itemTags = await prisma.itemTags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ItemTagsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsUpdateArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ItemTags.
     * @param {ItemTagsDeleteManyArgs} args - Arguments to filter ItemTags to delete.
     * @example
     * // Delete a few ItemTags
     * const { count } = await prisma.itemTags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ItemTagsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemTagsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItemTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ItemTags
     * const itemTags = await prisma.itemTags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ItemTagsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ItemTags.
     * @param {ItemTagsUpsertArgs} args - Arguments to update or create a ItemTags.
     * @example
     * // Update or create a ItemTags
     * const itemTags = await prisma.itemTags.upsert({
     *   create: {
     *     // ... data to create a ItemTags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ItemTags we want to update
     *   }
     * })
    **/
    upsert<T extends ItemTagsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ItemTagsUpsertArgs<ExtArgs>>
    ): Prisma__ItemTagsClient<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ItemTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsCountArgs} args - Arguments to filter ItemTags to count.
     * @example
     * // Count the number of ItemTags
     * const count = await prisma.itemTags.count({
     *   where: {
     *     // ... the filter for the ItemTags we want to count
     *   }
     * })
    **/
    count<T extends ItemTagsCountArgs>(
      args?: Subset<T, ItemTagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemTagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ItemTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemTagsAggregateArgs>(args: Subset<T, ItemTagsAggregateArgs>): Prisma.PrismaPromise<GetItemTagsAggregateType<T>>

    /**
     * Group by ItemTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemTagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemTagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemTagsGroupByArgs['orderBy'] }
        : { orderBy?: ItemTagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemTagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ItemTags model
   */
  readonly fields: ItemTagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ItemTags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemTagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tags<T extends TagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagsDefaultArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    items<T extends ItemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemsDefaultArgs<ExtArgs>>): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ItemTags model
   */ 
  interface ItemTagsFieldRefs {
    readonly tag_id: FieldRef<"ItemTags", 'Int'>
    readonly item_id: FieldRef<"ItemTags", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * ItemTags findUnique
   */
  export type ItemTagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter, which ItemTags to fetch.
     */
    where: ItemTagsWhereUniqueInput
  }


  /**
   * ItemTags findUniqueOrThrow
   */
  export type ItemTagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter, which ItemTags to fetch.
     */
    where: ItemTagsWhereUniqueInput
  }


  /**
   * ItemTags findFirst
   */
  export type ItemTagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter, which ItemTags to fetch.
     */
    where?: ItemTagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemTags to fetch.
     */
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemTags.
     */
    cursor?: ItemTagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemTags.
     */
    distinct?: ItemTagsScalarFieldEnum | ItemTagsScalarFieldEnum[]
  }


  /**
   * ItemTags findFirstOrThrow
   */
  export type ItemTagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter, which ItemTags to fetch.
     */
    where?: ItemTagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemTags to fetch.
     */
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemTags.
     */
    cursor?: ItemTagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemTags.
     */
    distinct?: ItemTagsScalarFieldEnum | ItemTagsScalarFieldEnum[]
  }


  /**
   * ItemTags findMany
   */
  export type ItemTagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter, which ItemTags to fetch.
     */
    where?: ItemTagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemTags to fetch.
     */
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ItemTags.
     */
    cursor?: ItemTagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemTags.
     */
    skip?: number
    distinct?: ItemTagsScalarFieldEnum | ItemTagsScalarFieldEnum[]
  }


  /**
   * ItemTags create
   */
  export type ItemTagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * The data needed to create a ItemTags.
     */
    data: XOR<ItemTagsCreateInput, ItemTagsUncheckedCreateInput>
  }


  /**
   * ItemTags createMany
   */
  export type ItemTagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ItemTags.
     */
    data: ItemTagsCreateManyInput | ItemTagsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * ItemTags update
   */
  export type ItemTagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * The data needed to update a ItemTags.
     */
    data: XOR<ItemTagsUpdateInput, ItemTagsUncheckedUpdateInput>
    /**
     * Choose, which ItemTags to update.
     */
    where: ItemTagsWhereUniqueInput
  }


  /**
   * ItemTags updateMany
   */
  export type ItemTagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ItemTags.
     */
    data: XOR<ItemTagsUpdateManyMutationInput, ItemTagsUncheckedUpdateManyInput>
    /**
     * Filter which ItemTags to update
     */
    where?: ItemTagsWhereInput
  }


  /**
   * ItemTags upsert
   */
  export type ItemTagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * The filter to search for the ItemTags to update in case it exists.
     */
    where: ItemTagsWhereUniqueInput
    /**
     * In case the ItemTags found by the `where` argument doesn't exist, create a new ItemTags with this data.
     */
    create: XOR<ItemTagsCreateInput, ItemTagsUncheckedCreateInput>
    /**
     * In case the ItemTags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemTagsUpdateInput, ItemTagsUncheckedUpdateInput>
  }


  /**
   * ItemTags delete
   */
  export type ItemTagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    /**
     * Filter which ItemTags to delete.
     */
    where: ItemTagsWhereUniqueInput
  }


  /**
   * ItemTags deleteMany
   */
  export type ItemTagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemTags to delete
     */
    where?: ItemTagsWhereInput
  }


  /**
   * ItemTags without action
   */
  export type ItemTagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
  }



  /**
   * Model Items
   */

  export type AggregateItems = {
    _count: ItemsCountAggregateOutputType | null
    _avg: ItemsAvgAggregateOutputType | null
    _sum: ItemsSumAggregateOutputType | null
    _min: ItemsMinAggregateOutputType | null
    _max: ItemsMaxAggregateOutputType | null
  }

  export type ItemsAvgAggregateOutputType = {
    id: number | null
    collection_id: number | null
    custom_int1_value: number | null
    custom_int2_value: number | null
    custom_int3_value: number | null
  }

  export type ItemsSumAggregateOutputType = {
    id: number | null
    collection_id: number | null
    custom_int1_value: number | null
    custom_int2_value: number | null
    custom_int3_value: number | null
  }

  export type ItemsMinAggregateOutputType = {
    id: number | null
    name: string | null
    collection_id: number | null
    custom_string1_value: string | null
    custom_string2_value: string | null
    custom_string3_value: string | null
    custom_int1_value: number | null
    custom_int2_value: number | null
    custom_int3_value: number | null
    custom_text1_value: string | null
    custom_text2_value: string | null
    custom_text3_value: string | null
    custom_boolean1_value: boolean | null
    custom_boolean2_value: boolean | null
    custom_boolean3_value: boolean | null
    custom_date1_value: Date | null
    custom_date2_value: Date | null
    custom_date3_value: Date | null
  }

  export type ItemsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    collection_id: number | null
    custom_string1_value: string | null
    custom_string2_value: string | null
    custom_string3_value: string | null
    custom_int1_value: number | null
    custom_int2_value: number | null
    custom_int3_value: number | null
    custom_text1_value: string | null
    custom_text2_value: string | null
    custom_text3_value: string | null
    custom_boolean1_value: boolean | null
    custom_boolean2_value: boolean | null
    custom_boolean3_value: boolean | null
    custom_date1_value: Date | null
    custom_date2_value: Date | null
    custom_date3_value: Date | null
  }

  export type ItemsCountAggregateOutputType = {
    id: number
    name: number
    collection_id: number
    custom_string1_value: number
    custom_string2_value: number
    custom_string3_value: number
    custom_int1_value: number
    custom_int2_value: number
    custom_int3_value: number
    custom_text1_value: number
    custom_text2_value: number
    custom_text3_value: number
    custom_boolean1_value: number
    custom_boolean2_value: number
    custom_boolean3_value: number
    custom_date1_value: number
    custom_date2_value: number
    custom_date3_value: number
    _all: number
  }


  export type ItemsAvgAggregateInputType = {
    id?: true
    collection_id?: true
    custom_int1_value?: true
    custom_int2_value?: true
    custom_int3_value?: true
  }

  export type ItemsSumAggregateInputType = {
    id?: true
    collection_id?: true
    custom_int1_value?: true
    custom_int2_value?: true
    custom_int3_value?: true
  }

  export type ItemsMinAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    custom_string1_value?: true
    custom_string2_value?: true
    custom_string3_value?: true
    custom_int1_value?: true
    custom_int2_value?: true
    custom_int3_value?: true
    custom_text1_value?: true
    custom_text2_value?: true
    custom_text3_value?: true
    custom_boolean1_value?: true
    custom_boolean2_value?: true
    custom_boolean3_value?: true
    custom_date1_value?: true
    custom_date2_value?: true
    custom_date3_value?: true
  }

  export type ItemsMaxAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    custom_string1_value?: true
    custom_string2_value?: true
    custom_string3_value?: true
    custom_int1_value?: true
    custom_int2_value?: true
    custom_int3_value?: true
    custom_text1_value?: true
    custom_text2_value?: true
    custom_text3_value?: true
    custom_boolean1_value?: true
    custom_boolean2_value?: true
    custom_boolean3_value?: true
    custom_date1_value?: true
    custom_date2_value?: true
    custom_date3_value?: true
  }

  export type ItemsCountAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    custom_string1_value?: true
    custom_string2_value?: true
    custom_string3_value?: true
    custom_int1_value?: true
    custom_int2_value?: true
    custom_int3_value?: true
    custom_text1_value?: true
    custom_text2_value?: true
    custom_text3_value?: true
    custom_boolean1_value?: true
    custom_boolean2_value?: true
    custom_boolean3_value?: true
    custom_date1_value?: true
    custom_date2_value?: true
    custom_date3_value?: true
    _all?: true
  }

  export type ItemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Items to aggregate.
     */
    where?: ItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemsOrderByWithRelationInput | ItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Items
    **/
    _count?: true | ItemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemsMaxAggregateInputType
  }

  export type GetItemsAggregateType<T extends ItemsAggregateArgs> = {
        [P in keyof T & keyof AggregateItems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItems[P]>
      : GetScalarType<T[P], AggregateItems[P]>
  }




  export type ItemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemsWhereInput
    orderBy?: ItemsOrderByWithAggregationInput | ItemsOrderByWithAggregationInput[]
    by: ItemsScalarFieldEnum[] | ItemsScalarFieldEnum
    having?: ItemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemsCountAggregateInputType | true
    _avg?: ItemsAvgAggregateInputType
    _sum?: ItemsSumAggregateInputType
    _min?: ItemsMinAggregateInputType
    _max?: ItemsMaxAggregateInputType
  }

  export type ItemsGroupByOutputType = {
    id: number
    name: string
    collection_id: number
    custom_string1_value: string | null
    custom_string2_value: string | null
    custom_string3_value: string | null
    custom_int1_value: number | null
    custom_int2_value: number | null
    custom_int3_value: number | null
    custom_text1_value: string | null
    custom_text2_value: string | null
    custom_text3_value: string | null
    custom_boolean1_value: boolean | null
    custom_boolean2_value: boolean | null
    custom_boolean3_value: boolean | null
    custom_date1_value: Date | null
    custom_date2_value: Date | null
    custom_date3_value: Date | null
    _count: ItemsCountAggregateOutputType | null
    _avg: ItemsAvgAggregateOutputType | null
    _sum: ItemsSumAggregateOutputType | null
    _min: ItemsMinAggregateOutputType | null
    _max: ItemsMaxAggregateOutputType | null
  }

  type GetItemsGroupByPayload<T extends ItemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemsGroupByOutputType[P]>
            : GetScalarType<T[P], ItemsGroupByOutputType[P]>
        }
      >
    >


  export type ItemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    collection_id?: boolean
    custom_string1_value?: boolean
    custom_string2_value?: boolean
    custom_string3_value?: boolean
    custom_int1_value?: boolean
    custom_int2_value?: boolean
    custom_int3_value?: boolean
    custom_text1_value?: boolean
    custom_text2_value?: boolean
    custom_text3_value?: boolean
    custom_boolean1_value?: boolean
    custom_boolean2_value?: boolean
    custom_boolean3_value?: boolean
    custom_date1_value?: boolean
    custom_date2_value?: boolean
    custom_date3_value?: boolean
    tags?: boolean | Items$tagsArgs<ExtArgs>
    collection?: boolean | CollectionsDefaultArgs<ExtArgs>
    Comment?: boolean | Items$CommentArgs<ExtArgs>
    Like?: boolean | Items$LikeArgs<ExtArgs>
    _count?: boolean | ItemsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["items"]>

  export type ItemsSelectScalar = {
    id?: boolean
    name?: boolean
    collection_id?: boolean
    custom_string1_value?: boolean
    custom_string2_value?: boolean
    custom_string3_value?: boolean
    custom_int1_value?: boolean
    custom_int2_value?: boolean
    custom_int3_value?: boolean
    custom_text1_value?: boolean
    custom_text2_value?: boolean
    custom_text3_value?: boolean
    custom_boolean1_value?: boolean
    custom_boolean2_value?: boolean
    custom_boolean3_value?: boolean
    custom_date1_value?: boolean
    custom_date2_value?: boolean
    custom_date3_value?: boolean
  }

  export type ItemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | Items$tagsArgs<ExtArgs>
    collection?: boolean | CollectionsDefaultArgs<ExtArgs>
    Comment?: boolean | Items$CommentArgs<ExtArgs>
    Like?: boolean | Items$LikeArgs<ExtArgs>
    _count?: boolean | ItemsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $ItemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Items"
    objects: {
      tags: Prisma.$ItemTagsPayload<ExtArgs>[]
      collection: Prisma.$CollectionsPayload<ExtArgs>
      Comment: Prisma.$CommentsPayload<ExtArgs>[]
      Like: Prisma.$LikesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      collection_id: number
      custom_string1_value: string | null
      custom_string2_value: string | null
      custom_string3_value: string | null
      custom_int1_value: number | null
      custom_int2_value: number | null
      custom_int3_value: number | null
      custom_text1_value: string | null
      custom_text2_value: string | null
      custom_text3_value: string | null
      custom_boolean1_value: boolean | null
      custom_boolean2_value: boolean | null
      custom_boolean3_value: boolean | null
      custom_date1_value: Date | null
      custom_date2_value: Date | null
      custom_date3_value: Date | null
    }, ExtArgs["result"]["items"]>
    composites: {}
  }


  type ItemsGetPayload<S extends boolean | null | undefined | ItemsDefaultArgs> = $Result.GetResult<Prisma.$ItemsPayload, S>

  type ItemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ItemsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ItemsCountAggregateInputType | true
    }

  export interface ItemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Items'], meta: { name: 'Items' } }
    /**
     * Find zero or one Items that matches the filter.
     * @param {ItemsFindUniqueArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ItemsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsFindUniqueArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Items that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ItemsFindUniqueOrThrowArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ItemsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsFindFirstArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ItemsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsFindFirstArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsFindFirstOrThrowArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ItemsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.items.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemsWithIdOnly = await prisma.items.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ItemsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Items.
     * @param {ItemsCreateArgs} args - Arguments to create a Items.
     * @example
     * // Create one Items
     * const Items = await prisma.items.create({
     *   data: {
     *     // ... data to create a Items
     *   }
     * })
     * 
    **/
    create<T extends ItemsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsCreateArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Items.
     *     @param {ItemsCreateManyArgs} args - Arguments to create many Items.
     *     @example
     *     // Create many Items
     *     const items = await prisma.items.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ItemsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Items.
     * @param {ItemsDeleteArgs} args - Arguments to delete one Items.
     * @example
     * // Delete one Items
     * const Items = await prisma.items.delete({
     *   where: {
     *     // ... filter to delete one Items
     *   }
     * })
     * 
    **/
    delete<T extends ItemsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsDeleteArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Items.
     * @param {ItemsUpdateArgs} args - Arguments to update one Items.
     * @example
     * // Update one Items
     * const items = await prisma.items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ItemsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsUpdateArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Items.
     * @param {ItemsDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ItemsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItemsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const items = await prisma.items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ItemsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Items.
     * @param {ItemsUpsertArgs} args - Arguments to update or create a Items.
     * @example
     * // Update or create a Items
     * const items = await prisma.items.upsert({
     *   create: {
     *     // ... data to create a Items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Items we want to update
     *   }
     * })
    **/
    upsert<T extends ItemsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ItemsUpsertArgs<ExtArgs>>
    ): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.items.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends ItemsCountArgs>(
      args?: Subset<T, ItemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemsAggregateArgs>(args: Subset<T, ItemsAggregateArgs>): Prisma.PrismaPromise<GetItemsAggregateType<T>>

    /**
     * Group by Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemsGroupByArgs['orderBy'] }
        : { orderBy?: ItemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Items model
   */
  readonly fields: ItemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tags<T extends Items$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Items$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemTagsPayload<ExtArgs>, T, 'findMany'> | Null>;

    collection<T extends CollectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionsDefaultArgs<ExtArgs>>): Prisma__CollectionsClient<$Result.GetResult<Prisma.$CollectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Comment<T extends Items$CommentArgs<ExtArgs> = {}>(args?: Subset<T, Items$CommentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findMany'> | Null>;

    Like<T extends Items$LikeArgs<ExtArgs> = {}>(args?: Subset<T, Items$LikeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Items model
   */ 
  interface ItemsFieldRefs {
    readonly id: FieldRef<"Items", 'Int'>
    readonly name: FieldRef<"Items", 'String'>
    readonly collection_id: FieldRef<"Items", 'Int'>
    readonly custom_string1_value: FieldRef<"Items", 'String'>
    readonly custom_string2_value: FieldRef<"Items", 'String'>
    readonly custom_string3_value: FieldRef<"Items", 'String'>
    readonly custom_int1_value: FieldRef<"Items", 'Int'>
    readonly custom_int2_value: FieldRef<"Items", 'Int'>
    readonly custom_int3_value: FieldRef<"Items", 'Int'>
    readonly custom_text1_value: FieldRef<"Items", 'String'>
    readonly custom_text2_value: FieldRef<"Items", 'String'>
    readonly custom_text3_value: FieldRef<"Items", 'String'>
    readonly custom_boolean1_value: FieldRef<"Items", 'Boolean'>
    readonly custom_boolean2_value: FieldRef<"Items", 'Boolean'>
    readonly custom_boolean3_value: FieldRef<"Items", 'Boolean'>
    readonly custom_date1_value: FieldRef<"Items", 'DateTime'>
    readonly custom_date2_value: FieldRef<"Items", 'DateTime'>
    readonly custom_date3_value: FieldRef<"Items", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * Items findUnique
   */
  export type ItemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where: ItemsWhereUniqueInput
  }


  /**
   * Items findUniqueOrThrow
   */
  export type ItemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where: ItemsWhereUniqueInput
  }


  /**
   * Items findFirst
   */
  export type ItemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemsOrderByWithRelationInput | ItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }


  /**
   * Items findFirstOrThrow
   */
  export type ItemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemsOrderByWithRelationInput | ItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }


  /**
   * Items findMany
   */
  export type ItemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemsOrderByWithRelationInput | ItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Items.
     */
    cursor?: ItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }


  /**
   * Items create
   */
  export type ItemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * The data needed to create a Items.
     */
    data: XOR<ItemsCreateInput, ItemsUncheckedCreateInput>
  }


  /**
   * Items createMany
   */
  export type ItemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Items.
     */
    data: ItemsCreateManyInput | ItemsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Items update
   */
  export type ItemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * The data needed to update a Items.
     */
    data: XOR<ItemsUpdateInput, ItemsUncheckedUpdateInput>
    /**
     * Choose, which Items to update.
     */
    where: ItemsWhereUniqueInput
  }


  /**
   * Items updateMany
   */
  export type ItemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Items.
     */
    data: XOR<ItemsUpdateManyMutationInput, ItemsUncheckedUpdateManyInput>
    /**
     * Filter which Items to update
     */
    where?: ItemsWhereInput
  }


  /**
   * Items upsert
   */
  export type ItemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * The filter to search for the Items to update in case it exists.
     */
    where: ItemsWhereUniqueInput
    /**
     * In case the Items found by the `where` argument doesn't exist, create a new Items with this data.
     */
    create: XOR<ItemsCreateInput, ItemsUncheckedCreateInput>
    /**
     * In case the Items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemsUpdateInput, ItemsUncheckedUpdateInput>
  }


  /**
   * Items delete
   */
  export type ItemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
    /**
     * Filter which Items to delete.
     */
    where: ItemsWhereUniqueInput
  }


  /**
   * Items deleteMany
   */
  export type ItemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Items to delete
     */
    where?: ItemsWhereInput
  }


  /**
   * Items.tags
   */
  export type Items$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemTags
     */
    select?: ItemTagsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemTagsInclude<ExtArgs> | null
    where?: ItemTagsWhereInput
    orderBy?: ItemTagsOrderByWithRelationInput | ItemTagsOrderByWithRelationInput[]
    cursor?: ItemTagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemTagsScalarFieldEnum | ItemTagsScalarFieldEnum[]
  }


  /**
   * Items.Comment
   */
  export type Items$CommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    where?: CommentsWhereInput
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    cursor?: CommentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }


  /**
   * Items.Like
   */
  export type Items$LikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    where?: LikesWhereInput
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    cursor?: LikesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }


  /**
   * Items without action
   */
  export type ItemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Items
     */
    select?: ItemsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ItemsInclude<ExtArgs> | null
  }



  /**
   * Model Comments
   */

  export type AggregateComments = {
    _count: CommentsCountAggregateOutputType | null
    _avg: CommentsAvgAggregateOutputType | null
    _sum: CommentsSumAggregateOutputType | null
    _min: CommentsMinAggregateOutputType | null
    _max: CommentsMaxAggregateOutputType | null
  }

  export type CommentsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type CommentsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type CommentsMinAggregateOutputType = {
    id: number | null
    content: string | null
    user_id: number | null
    item_id: number | null
  }

  export type CommentsMaxAggregateOutputType = {
    id: number | null
    content: string | null
    user_id: number | null
    item_id: number | null
  }

  export type CommentsCountAggregateOutputType = {
    id: number
    content: number
    user_id: number
    item_id: number
    _all: number
  }


  export type CommentsAvgAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type CommentsSumAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type CommentsMinAggregateInputType = {
    id?: true
    content?: true
    user_id?: true
    item_id?: true
  }

  export type CommentsMaxAggregateInputType = {
    id?: true
    content?: true
    user_id?: true
    item_id?: true
  }

  export type CommentsCountAggregateInputType = {
    id?: true
    content?: true
    user_id?: true
    item_id?: true
    _all?: true
  }

  export type CommentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to aggregate.
     */
    where?: CommentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentsMaxAggregateInputType
  }

  export type GetCommentsAggregateType<T extends CommentsAggregateArgs> = {
        [P in keyof T & keyof AggregateComments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComments[P]>
      : GetScalarType<T[P], AggregateComments[P]>
  }




  export type CommentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentsWhereInput
    orderBy?: CommentsOrderByWithAggregationInput | CommentsOrderByWithAggregationInput[]
    by: CommentsScalarFieldEnum[] | CommentsScalarFieldEnum
    having?: CommentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentsCountAggregateInputType | true
    _avg?: CommentsAvgAggregateInputType
    _sum?: CommentsSumAggregateInputType
    _min?: CommentsMinAggregateInputType
    _max?: CommentsMaxAggregateInputType
  }

  export type CommentsGroupByOutputType = {
    id: number
    content: string
    user_id: number
    item_id: number
    _count: CommentsCountAggregateOutputType | null
    _avg: CommentsAvgAggregateOutputType | null
    _sum: CommentsSumAggregateOutputType | null
    _min: CommentsMinAggregateOutputType | null
    _max: CommentsMaxAggregateOutputType | null
  }

  type GetCommentsGroupByPayload<T extends CommentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentsGroupByOutputType[P]>
            : GetScalarType<T[P], CommentsGroupByOutputType[P]>
        }
      >
    >


  export type CommentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    user_id?: boolean
    item_id?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    item?: boolean | ItemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comments"]>

  export type CommentsSelectScalar = {
    id?: boolean
    content?: boolean
    user_id?: boolean
    item_id?: boolean
  }

  export type CommentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    item?: boolean | ItemsDefaultArgs<ExtArgs>
  }


  export type $CommentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comments"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      item: Prisma.$ItemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      user_id: number
      item_id: number
    }, ExtArgs["result"]["comments"]>
    composites: {}
  }


  type CommentsGetPayload<S extends boolean | null | undefined | CommentsDefaultArgs> = $Result.GetResult<Prisma.$CommentsPayload, S>

  type CommentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CommentsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CommentsCountAggregateInputType | true
    }

  export interface CommentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comments'], meta: { name: 'Comments' } }
    /**
     * Find zero or one Comments that matches the filter.
     * @param {CommentsFindUniqueArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CommentsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsFindUniqueArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Comments that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CommentsFindUniqueOrThrowArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CommentsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsFindFirstArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CommentsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsFindFirstArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsFindFirstOrThrowArgs} args - Arguments to find a Comments
     * @example
     * // Get one Comments
     * const comments = await prisma.comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CommentsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comments.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentsWithIdOnly = await prisma.comments.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CommentsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Comments.
     * @param {CommentsCreateArgs} args - Arguments to create a Comments.
     * @example
     * // Create one Comments
     * const Comments = await prisma.comments.create({
     *   data: {
     *     // ... data to create a Comments
     *   }
     * })
     * 
    **/
    create<T extends CommentsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsCreateArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Comments.
     *     @param {CommentsCreateManyArgs} args - Arguments to create many Comments.
     *     @example
     *     // Create many Comments
     *     const comments = await prisma.comments.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CommentsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Comments.
     * @param {CommentsDeleteArgs} args - Arguments to delete one Comments.
     * @example
     * // Delete one Comments
     * const Comments = await prisma.comments.delete({
     *   where: {
     *     // ... filter to delete one Comments
     *   }
     * })
     * 
    **/
    delete<T extends CommentsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsDeleteArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Comments.
     * @param {CommentsUpdateArgs} args - Arguments to update one Comments.
     * @example
     * // Update one Comments
     * const comments = await prisma.comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CommentsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsUpdateArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Comments.
     * @param {CommentsDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CommentsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CommentsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comments = await prisma.comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CommentsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comments.
     * @param {CommentsUpsertArgs} args - Arguments to update or create a Comments.
     * @example
     * // Update or create a Comments
     * const comments = await prisma.comments.upsert({
     *   create: {
     *     // ... data to create a Comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comments we want to update
     *   }
     * })
    **/
    upsert<T extends CommentsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CommentsUpsertArgs<ExtArgs>>
    ): Prisma__CommentsClient<$Result.GetResult<Prisma.$CommentsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comments.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentsCountArgs>(
      args?: Subset<T, CommentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentsAggregateArgs>(args: Subset<T, CommentsAggregateArgs>): Prisma.PrismaPromise<GetCommentsAggregateType<T>>

    /**
     * Group by Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentsGroupByArgs['orderBy'] }
        : { orderBy?: CommentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comments model
   */
  readonly fields: CommentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    item<T extends ItemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemsDefaultArgs<ExtArgs>>): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Comments model
   */ 
  interface CommentsFieldRefs {
    readonly id: FieldRef<"Comments", 'Int'>
    readonly content: FieldRef<"Comments", 'String'>
    readonly user_id: FieldRef<"Comments", 'Int'>
    readonly item_id: FieldRef<"Comments", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Comments findUnique
   */
  export type CommentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where: CommentsWhereUniqueInput
  }


  /**
   * Comments findUniqueOrThrow
   */
  export type CommentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where: CommentsWhereUniqueInput
  }


  /**
   * Comments findFirst
   */
  export type CommentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }


  /**
   * Comments findFirstOrThrow
   */
  export type CommentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }


  /**
   * Comments findMany
   */
  export type CommentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentsOrderByWithRelationInput | CommentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentsScalarFieldEnum | CommentsScalarFieldEnum[]
  }


  /**
   * Comments create
   */
  export type CommentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * The data needed to create a Comments.
     */
    data: XOR<CommentsCreateInput, CommentsUncheckedCreateInput>
  }


  /**
   * Comments createMany
   */
  export type CommentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentsCreateManyInput | CommentsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Comments update
   */
  export type CommentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * The data needed to update a Comments.
     */
    data: XOR<CommentsUpdateInput, CommentsUncheckedUpdateInput>
    /**
     * Choose, which Comments to update.
     */
    where: CommentsWhereUniqueInput
  }


  /**
   * Comments updateMany
   */
  export type CommentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentsUpdateManyMutationInput, CommentsUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentsWhereInput
  }


  /**
   * Comments upsert
   */
  export type CommentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * The filter to search for the Comments to update in case it exists.
     */
    where: CommentsWhereUniqueInput
    /**
     * In case the Comments found by the `where` argument doesn't exist, create a new Comments with this data.
     */
    create: XOR<CommentsCreateInput, CommentsUncheckedCreateInput>
    /**
     * In case the Comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentsUpdateInput, CommentsUncheckedUpdateInput>
  }


  /**
   * Comments delete
   */
  export type CommentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
    /**
     * Filter which Comments to delete.
     */
    where: CommentsWhereUniqueInput
  }


  /**
   * Comments deleteMany
   */
  export type CommentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentsWhereInput
  }


  /**
   * Comments without action
   */
  export type CommentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comments
     */
    select?: CommentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CommentsInclude<ExtArgs> | null
  }



  /**
   * Model Likes
   */

  export type AggregateLikes = {
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  export type LikesAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type LikesSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type LikesMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type LikesMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    item_id: number | null
  }

  export type LikesCountAggregateOutputType = {
    id: number
    user_id: number
    item_id: number
    _all: number
  }


  export type LikesAvgAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type LikesSumAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type LikesMinAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type LikesMaxAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
  }

  export type LikesCountAggregateInputType = {
    id?: true
    user_id?: true
    item_id?: true
    _all?: true
  }

  export type LikesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Likes to aggregate.
     */
    where?: LikesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LikesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Likes
    **/
    _count?: true | LikesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LikesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LikesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikesMaxAggregateInputType
  }

  export type GetLikesAggregateType<T extends LikesAggregateArgs> = {
        [P in keyof T & keyof AggregateLikes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLikes[P]>
      : GetScalarType<T[P], AggregateLikes[P]>
  }




  export type LikesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikesWhereInput
    orderBy?: LikesOrderByWithAggregationInput | LikesOrderByWithAggregationInput[]
    by: LikesScalarFieldEnum[] | LikesScalarFieldEnum
    having?: LikesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikesCountAggregateInputType | true
    _avg?: LikesAvgAggregateInputType
    _sum?: LikesSumAggregateInputType
    _min?: LikesMinAggregateInputType
    _max?: LikesMaxAggregateInputType
  }

  export type LikesGroupByOutputType = {
    id: number
    user_id: number
    item_id: number
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  type GetLikesGroupByPayload<T extends LikesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikesGroupByOutputType[P]>
            : GetScalarType<T[P], LikesGroupByOutputType[P]>
        }
      >
    >


  export type LikesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    item_id?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    item?: boolean | ItemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["likes"]>

  export type LikesSelectScalar = {
    id?: boolean
    user_id?: boolean
    item_id?: boolean
  }

  export type LikesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    item?: boolean | ItemsDefaultArgs<ExtArgs>
  }


  export type $LikesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Likes"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      item: Prisma.$ItemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      item_id: number
    }, ExtArgs["result"]["likes"]>
    composites: {}
  }


  type LikesGetPayload<S extends boolean | null | undefined | LikesDefaultArgs> = $Result.GetResult<Prisma.$LikesPayload, S>

  type LikesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LikesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LikesCountAggregateInputType | true
    }

  export interface LikesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Likes'], meta: { name: 'Likes' } }
    /**
     * Find zero or one Likes that matches the filter.
     * @param {LikesFindUniqueArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LikesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LikesFindUniqueArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Likes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LikesFindUniqueOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LikesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesFindFirstArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LikesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesFindFirstArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Likes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesFindFirstOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LikesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.likes.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.likes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const likesWithIdOnly = await prisma.likes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LikesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Likes.
     * @param {LikesCreateArgs} args - Arguments to create a Likes.
     * @example
     * // Create one Likes
     * const Likes = await prisma.likes.create({
     *   data: {
     *     // ... data to create a Likes
     *   }
     * })
     * 
    **/
    create<T extends LikesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LikesCreateArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Likes.
     *     @param {LikesCreateManyArgs} args - Arguments to create many Likes.
     *     @example
     *     // Create many Likes
     *     const likes = await prisma.likes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LikesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Likes.
     * @param {LikesDeleteArgs} args - Arguments to delete one Likes.
     * @example
     * // Delete one Likes
     * const Likes = await prisma.likes.delete({
     *   where: {
     *     // ... filter to delete one Likes
     *   }
     * })
     * 
    **/
    delete<T extends LikesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LikesDeleteArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Likes.
     * @param {LikesUpdateArgs} args - Arguments to update one Likes.
     * @example
     * // Update one Likes
     * const likes = await prisma.likes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LikesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LikesUpdateArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Likes.
     * @param {LikesDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.likes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LikesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LikesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const likes = await prisma.likes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LikesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LikesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Likes.
     * @param {LikesUpsertArgs} args - Arguments to update or create a Likes.
     * @example
     * // Update or create a Likes
     * const likes = await prisma.likes.upsert({
     *   create: {
     *     // ... data to create a Likes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Likes we want to update
     *   }
     * })
    **/
    upsert<T extends LikesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LikesUpsertArgs<ExtArgs>>
    ): Prisma__LikesClient<$Result.GetResult<Prisma.$LikesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.likes.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends LikesCountArgs>(
      args?: Subset<T, LikesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikesAggregateArgs>(args: Subset<T, LikesAggregateArgs>): Prisma.PrismaPromise<GetLikesAggregateType<T>>

    /**
     * Group by Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LikesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LikesGroupByArgs['orderBy'] }
        : { orderBy?: LikesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LikesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Likes model
   */
  readonly fields: LikesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Likes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LikesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    item<T extends ItemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemsDefaultArgs<ExtArgs>>): Prisma__ItemsClient<$Result.GetResult<Prisma.$ItemsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Likes model
   */ 
  interface LikesFieldRefs {
    readonly id: FieldRef<"Likes", 'Int'>
    readonly user_id: FieldRef<"Likes", 'Int'>
    readonly item_id: FieldRef<"Likes", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Likes findUnique
   */
  export type LikesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where: LikesWhereUniqueInput
  }


  /**
   * Likes findUniqueOrThrow
   */
  export type LikesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where: LikesWhereUniqueInput
  }


  /**
   * Likes findFirst
   */
  export type LikesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }


  /**
   * Likes findFirstOrThrow
   */
  export type LikesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }


  /**
   * Likes findMany
   */
  export type LikesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikesOrderByWithRelationInput | LikesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Likes.
     */
    cursor?: LikesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }


  /**
   * Likes create
   */
  export type LikesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * The data needed to create a Likes.
     */
    data: XOR<LikesCreateInput, LikesUncheckedCreateInput>
  }


  /**
   * Likes createMany
   */
  export type LikesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Likes.
     */
    data: LikesCreateManyInput | LikesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Likes update
   */
  export type LikesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * The data needed to update a Likes.
     */
    data: XOR<LikesUpdateInput, LikesUncheckedUpdateInput>
    /**
     * Choose, which Likes to update.
     */
    where: LikesWhereUniqueInput
  }


  /**
   * Likes updateMany
   */
  export type LikesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Likes.
     */
    data: XOR<LikesUpdateManyMutationInput, LikesUncheckedUpdateManyInput>
    /**
     * Filter which Likes to update
     */
    where?: LikesWhereInput
  }


  /**
   * Likes upsert
   */
  export type LikesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * The filter to search for the Likes to update in case it exists.
     */
    where: LikesWhereUniqueInput
    /**
     * In case the Likes found by the `where` argument doesn't exist, create a new Likes with this data.
     */
    create: XOR<LikesCreateInput, LikesUncheckedCreateInput>
    /**
     * In case the Likes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LikesUpdateInput, LikesUncheckedUpdateInput>
  }


  /**
   * Likes delete
   */
  export type LikesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
    /**
     * Filter which Likes to delete.
     */
    where: LikesWhereUniqueInput
  }


  /**
   * Likes deleteMany
   */
  export type LikesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Likes to delete
     */
    where?: LikesWhereInput
  }


  /**
   * Likes without action
   */
  export type LikesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Likes
     */
    select?: LikesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LikesInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    email: 'email',
    status: 'status',
    role: 'role'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    category_name: 'category_name'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const CollectionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    image_url: 'image_url',
    user_id: 'user_id',
    category_id: 'category_id',
    custom_string1_state: 'custom_string1_state',
    custom_string1_name: 'custom_string1_name',
    custom_string2_state: 'custom_string2_state',
    custom_string2_name: 'custom_string2_name',
    custom_string3_state: 'custom_string3_state',
    custom_string3_name: 'custom_string3_name',
    custom_int1_state: 'custom_int1_state',
    custom_int1_name: 'custom_int1_name',
    custom_int2_state: 'custom_int2_state',
    custom_int2_name: 'custom_int2_name',
    custom_int3_state: 'custom_int3_state',
    custom_int3_name: 'custom_int3_name',
    custom_text1_state: 'custom_text1_state',
    custom_text1_name: 'custom_text1_name',
    custom_text2_state: 'custom_text2_state',
    custom_text2_name: 'custom_text2_name',
    custom_text3_state: 'custom_text3_state',
    custom_text3_name: 'custom_text3_name',
    custom_boolean1_state: 'custom_boolean1_state',
    custom_boolean1_name: 'custom_boolean1_name',
    custom_boolean2_state: 'custom_boolean2_state',
    custom_boolean2_name: 'custom_boolean2_name',
    custom_boolean3_state: 'custom_boolean3_state',
    custom_boolean3_name: 'custom_boolean3_name',
    custom_date1_state: 'custom_date1_state',
    custom_date1_name: 'custom_date1_name',
    custom_date2_state: 'custom_date2_state',
    custom_date2_name: 'custom_date2_name',
    custom_date3_state: 'custom_date3_state',
    custom_date3_name: 'custom_date3_name'
  };

  export type CollectionsScalarFieldEnum = (typeof CollectionsScalarFieldEnum)[keyof typeof CollectionsScalarFieldEnum]


  export const TagsScalarFieldEnum: {
    id: 'id',
    tag_name: 'tag_name'
  };

  export type TagsScalarFieldEnum = (typeof TagsScalarFieldEnum)[keyof typeof TagsScalarFieldEnum]


  export const ItemTagsScalarFieldEnum: {
    tag_id: 'tag_id',
    item_id: 'item_id'
  };

  export type ItemTagsScalarFieldEnum = (typeof ItemTagsScalarFieldEnum)[keyof typeof ItemTagsScalarFieldEnum]


  export const ItemsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    collection_id: 'collection_id',
    custom_string1_value: 'custom_string1_value',
    custom_string2_value: 'custom_string2_value',
    custom_string3_value: 'custom_string3_value',
    custom_int1_value: 'custom_int1_value',
    custom_int2_value: 'custom_int2_value',
    custom_int3_value: 'custom_int3_value',
    custom_text1_value: 'custom_text1_value',
    custom_text2_value: 'custom_text2_value',
    custom_text3_value: 'custom_text3_value',
    custom_boolean1_value: 'custom_boolean1_value',
    custom_boolean2_value: 'custom_boolean2_value',
    custom_boolean3_value: 'custom_boolean3_value',
    custom_date1_value: 'custom_date1_value',
    custom_date2_value: 'custom_date2_value',
    custom_date3_value: 'custom_date3_value'
  };

  export type ItemsScalarFieldEnum = (typeof ItemsScalarFieldEnum)[keyof typeof ItemsScalarFieldEnum]


  export const CommentsScalarFieldEnum: {
    id: 'id',
    content: 'content',
    user_id: 'user_id',
    item_id: 'item_id'
  };

  export type CommentsScalarFieldEnum = (typeof CommentsScalarFieldEnum)[keyof typeof CommentsScalarFieldEnum]


  export const LikesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    item_id: 'item_id'
  };

  export type LikesScalarFieldEnum = (typeof LikesScalarFieldEnum)[keyof typeof LikesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'user_status'
   */
  export type Enumuser_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_status'>
    


  /**
   * Reference to a field of type 'user_status[]'
   */
  export type ListEnumuser_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_status[]'>
    


  /**
   * Reference to a field of type 'user_role'
   */
  export type Enumuser_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_role'>
    


  /**
   * Reference to a field of type 'user_role[]'
   */
  export type ListEnumuser_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_role[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: IntFilter<"Users"> | number
    username?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    email?: StringFilter<"Users"> | string
    status?: Enumuser_statusFilter<"Users"> | $Enums.user_status
    role?: Enumuser_roleFilter<"Users"> | $Enums.user_role
    Collection?: CollectionsListRelationFilter
    Comment?: CommentsListRelationFilter
    Like?: LikesListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    role?: SortOrder
    Collection?: CollectionsOrderByRelationAggregateInput
    Comment?: CommentsOrderByRelationAggregateInput
    Like?: LikesOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    username?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    status?: Enumuser_statusFilter<"Users"> | $Enums.user_status
    role?: Enumuser_roleFilter<"Users"> | $Enums.user_role
    Collection?: CollectionsListRelationFilter
    Comment?: CommentsListRelationFilter
    Like?: LikesListRelationFilter
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    role?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _avg?: UsersAvgOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
    _sum?: UsersSumOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Users"> | number
    username?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    email?: StringWithAggregatesFilter<"Users"> | string
    status?: Enumuser_statusWithAggregatesFilter<"Users"> | $Enums.user_status
    role?: Enumuser_roleWithAggregatesFilter<"Users"> | $Enums.user_role
  }

  export type CategoriesWhereInput = {
    AND?: CategoriesWhereInput | CategoriesWhereInput[]
    OR?: CategoriesWhereInput[]
    NOT?: CategoriesWhereInput | CategoriesWhereInput[]
    id?: IntFilter<"Categories"> | number
    category_name?: StringFilter<"Categories"> | string
    Collection?: CollectionsListRelationFilter
  }

  export type CategoriesOrderByWithRelationInput = {
    id?: SortOrder
    category_name?: SortOrder
    Collection?: CollectionsOrderByRelationAggregateInput
  }

  export type CategoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    category_name?: string
    AND?: CategoriesWhereInput | CategoriesWhereInput[]
    OR?: CategoriesWhereInput[]
    NOT?: CategoriesWhereInput | CategoriesWhereInput[]
    Collection?: CollectionsListRelationFilter
  }, "id" | "category_name">

  export type CategoriesOrderByWithAggregationInput = {
    id?: SortOrder
    category_name?: SortOrder
    _count?: CategoriesCountOrderByAggregateInput
    _avg?: CategoriesAvgOrderByAggregateInput
    _max?: CategoriesMaxOrderByAggregateInput
    _min?: CategoriesMinOrderByAggregateInput
    _sum?: CategoriesSumOrderByAggregateInput
  }

  export type CategoriesScalarWhereWithAggregatesInput = {
    AND?: CategoriesScalarWhereWithAggregatesInput | CategoriesScalarWhereWithAggregatesInput[]
    OR?: CategoriesScalarWhereWithAggregatesInput[]
    NOT?: CategoriesScalarWhereWithAggregatesInput | CategoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categories"> | number
    category_name?: StringWithAggregatesFilter<"Categories"> | string
  }

  export type CollectionsWhereInput = {
    AND?: CollectionsWhereInput | CollectionsWhereInput[]
    OR?: CollectionsWhereInput[]
    NOT?: CollectionsWhereInput | CollectionsWhereInput[]
    id?: IntFilter<"Collections"> | number
    name?: StringFilter<"Collections"> | string
    description?: StringNullableFilter<"Collections"> | string | null
    image_url?: StringFilter<"Collections"> | string
    user_id?: IntFilter<"Collections"> | number
    category_id?: IntFilter<"Collections"> | number
    custom_string1_state?: BoolFilter<"Collections"> | boolean
    custom_string1_name?: StringNullableFilter<"Collections"> | string | null
    custom_string2_state?: BoolFilter<"Collections"> | boolean
    custom_string2_name?: StringNullableFilter<"Collections"> | string | null
    custom_string3_state?: BoolFilter<"Collections"> | boolean
    custom_string3_name?: StringNullableFilter<"Collections"> | string | null
    custom_int1_state?: BoolFilter<"Collections"> | boolean
    custom_int1_name?: StringNullableFilter<"Collections"> | string | null
    custom_int2_state?: BoolFilter<"Collections"> | boolean
    custom_int2_name?: StringNullableFilter<"Collections"> | string | null
    custom_int3_state?: BoolFilter<"Collections"> | boolean
    custom_int3_name?: StringNullableFilter<"Collections"> | string | null
    custom_text1_state?: BoolFilter<"Collections"> | boolean
    custom_text1_name?: StringNullableFilter<"Collections"> | string | null
    custom_text2_state?: BoolFilter<"Collections"> | boolean
    custom_text2_name?: StringNullableFilter<"Collections"> | string | null
    custom_text3_state?: BoolFilter<"Collections"> | boolean
    custom_text3_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean1_state?: BoolFilter<"Collections"> | boolean
    custom_boolean1_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean2_state?: BoolFilter<"Collections"> | boolean
    custom_boolean2_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean3_state?: BoolFilter<"Collections"> | boolean
    custom_boolean3_name?: StringNullableFilter<"Collections"> | string | null
    custom_date1_state?: BoolFilter<"Collections"> | boolean
    custom_date1_name?: StringNullableFilter<"Collections"> | string | null
    custom_date2_state?: BoolFilter<"Collections"> | boolean
    custom_date2_name?: StringNullableFilter<"Collections"> | string | null
    custom_date3_state?: BoolFilter<"Collections"> | boolean
    custom_date3_name?: StringNullableFilter<"Collections"> | string | null
    User?: XOR<UsersRelationFilter, UsersWhereInput>
    category?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    Item?: ItemsListRelationFilter
  }

  export type CollectionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
    custom_string1_state?: SortOrder
    custom_string1_name?: SortOrderInput | SortOrder
    custom_string2_state?: SortOrder
    custom_string2_name?: SortOrderInput | SortOrder
    custom_string3_state?: SortOrder
    custom_string3_name?: SortOrderInput | SortOrder
    custom_int1_state?: SortOrder
    custom_int1_name?: SortOrderInput | SortOrder
    custom_int2_state?: SortOrder
    custom_int2_name?: SortOrderInput | SortOrder
    custom_int3_state?: SortOrder
    custom_int3_name?: SortOrderInput | SortOrder
    custom_text1_state?: SortOrder
    custom_text1_name?: SortOrderInput | SortOrder
    custom_text2_state?: SortOrder
    custom_text2_name?: SortOrderInput | SortOrder
    custom_text3_state?: SortOrder
    custom_text3_name?: SortOrderInput | SortOrder
    custom_boolean1_state?: SortOrder
    custom_boolean1_name?: SortOrderInput | SortOrder
    custom_boolean2_state?: SortOrder
    custom_boolean2_name?: SortOrderInput | SortOrder
    custom_boolean3_state?: SortOrder
    custom_boolean3_name?: SortOrderInput | SortOrder
    custom_date1_state?: SortOrder
    custom_date1_name?: SortOrderInput | SortOrder
    custom_date2_state?: SortOrder
    custom_date2_name?: SortOrderInput | SortOrder
    custom_date3_state?: SortOrder
    custom_date3_name?: SortOrderInput | SortOrder
    User?: UsersOrderByWithRelationInput
    category?: CategoriesOrderByWithRelationInput
    Item?: ItemsOrderByRelationAggregateInput
  }

  export type CollectionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CollectionsWhereInput | CollectionsWhereInput[]
    OR?: CollectionsWhereInput[]
    NOT?: CollectionsWhereInput | CollectionsWhereInput[]
    name?: StringFilter<"Collections"> | string
    description?: StringNullableFilter<"Collections"> | string | null
    image_url?: StringFilter<"Collections"> | string
    user_id?: IntFilter<"Collections"> | number
    category_id?: IntFilter<"Collections"> | number
    custom_string1_state?: BoolFilter<"Collections"> | boolean
    custom_string1_name?: StringNullableFilter<"Collections"> | string | null
    custom_string2_state?: BoolFilter<"Collections"> | boolean
    custom_string2_name?: StringNullableFilter<"Collections"> | string | null
    custom_string3_state?: BoolFilter<"Collections"> | boolean
    custom_string3_name?: StringNullableFilter<"Collections"> | string | null
    custom_int1_state?: BoolFilter<"Collections"> | boolean
    custom_int1_name?: StringNullableFilter<"Collections"> | string | null
    custom_int2_state?: BoolFilter<"Collections"> | boolean
    custom_int2_name?: StringNullableFilter<"Collections"> | string | null
    custom_int3_state?: BoolFilter<"Collections"> | boolean
    custom_int3_name?: StringNullableFilter<"Collections"> | string | null
    custom_text1_state?: BoolFilter<"Collections"> | boolean
    custom_text1_name?: StringNullableFilter<"Collections"> | string | null
    custom_text2_state?: BoolFilter<"Collections"> | boolean
    custom_text2_name?: StringNullableFilter<"Collections"> | string | null
    custom_text3_state?: BoolFilter<"Collections"> | boolean
    custom_text3_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean1_state?: BoolFilter<"Collections"> | boolean
    custom_boolean1_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean2_state?: BoolFilter<"Collections"> | boolean
    custom_boolean2_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean3_state?: BoolFilter<"Collections"> | boolean
    custom_boolean3_name?: StringNullableFilter<"Collections"> | string | null
    custom_date1_state?: BoolFilter<"Collections"> | boolean
    custom_date1_name?: StringNullableFilter<"Collections"> | string | null
    custom_date2_state?: BoolFilter<"Collections"> | boolean
    custom_date2_name?: StringNullableFilter<"Collections"> | string | null
    custom_date3_state?: BoolFilter<"Collections"> | boolean
    custom_date3_name?: StringNullableFilter<"Collections"> | string | null
    User?: XOR<UsersRelationFilter, UsersWhereInput>
    category?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    Item?: ItemsListRelationFilter
  }, "id">

  export type CollectionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
    custom_string1_state?: SortOrder
    custom_string1_name?: SortOrderInput | SortOrder
    custom_string2_state?: SortOrder
    custom_string2_name?: SortOrderInput | SortOrder
    custom_string3_state?: SortOrder
    custom_string3_name?: SortOrderInput | SortOrder
    custom_int1_state?: SortOrder
    custom_int1_name?: SortOrderInput | SortOrder
    custom_int2_state?: SortOrder
    custom_int2_name?: SortOrderInput | SortOrder
    custom_int3_state?: SortOrder
    custom_int3_name?: SortOrderInput | SortOrder
    custom_text1_state?: SortOrder
    custom_text1_name?: SortOrderInput | SortOrder
    custom_text2_state?: SortOrder
    custom_text2_name?: SortOrderInput | SortOrder
    custom_text3_state?: SortOrder
    custom_text3_name?: SortOrderInput | SortOrder
    custom_boolean1_state?: SortOrder
    custom_boolean1_name?: SortOrderInput | SortOrder
    custom_boolean2_state?: SortOrder
    custom_boolean2_name?: SortOrderInput | SortOrder
    custom_boolean3_state?: SortOrder
    custom_boolean3_name?: SortOrderInput | SortOrder
    custom_date1_state?: SortOrder
    custom_date1_name?: SortOrderInput | SortOrder
    custom_date2_state?: SortOrder
    custom_date2_name?: SortOrderInput | SortOrder
    custom_date3_state?: SortOrder
    custom_date3_name?: SortOrderInput | SortOrder
    _count?: CollectionsCountOrderByAggregateInput
    _avg?: CollectionsAvgOrderByAggregateInput
    _max?: CollectionsMaxOrderByAggregateInput
    _min?: CollectionsMinOrderByAggregateInput
    _sum?: CollectionsSumOrderByAggregateInput
  }

  export type CollectionsScalarWhereWithAggregatesInput = {
    AND?: CollectionsScalarWhereWithAggregatesInput | CollectionsScalarWhereWithAggregatesInput[]
    OR?: CollectionsScalarWhereWithAggregatesInput[]
    NOT?: CollectionsScalarWhereWithAggregatesInput | CollectionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Collections"> | number
    name?: StringWithAggregatesFilter<"Collections"> | string
    description?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    image_url?: StringWithAggregatesFilter<"Collections"> | string
    user_id?: IntWithAggregatesFilter<"Collections"> | number
    category_id?: IntWithAggregatesFilter<"Collections"> | number
    custom_string1_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_string1_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_string2_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_string2_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_string3_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_string3_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_int1_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_int1_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_int2_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_int2_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_int3_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_int3_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_text1_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_text1_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_text2_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_text2_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_text3_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_text3_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_boolean1_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_boolean1_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_boolean2_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_boolean2_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_boolean3_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_boolean3_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_date1_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_date1_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_date2_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_date2_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
    custom_date3_state?: BoolWithAggregatesFilter<"Collections"> | boolean
    custom_date3_name?: StringNullableWithAggregatesFilter<"Collections"> | string | null
  }

  export type TagsWhereInput = {
    AND?: TagsWhereInput | TagsWhereInput[]
    OR?: TagsWhereInput[]
    NOT?: TagsWhereInput | TagsWhereInput[]
    id?: IntFilter<"Tags"> | number
    tag_name?: StringFilter<"Tags"> | string
    items?: ItemTagsListRelationFilter
  }

  export type TagsOrderByWithRelationInput = {
    id?: SortOrder
    tag_name?: SortOrder
    items?: ItemTagsOrderByRelationAggregateInput
  }

  export type TagsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tag_name?: string
    AND?: TagsWhereInput | TagsWhereInput[]
    OR?: TagsWhereInput[]
    NOT?: TagsWhereInput | TagsWhereInput[]
    items?: ItemTagsListRelationFilter
  }, "id" | "tag_name">

  export type TagsOrderByWithAggregationInput = {
    id?: SortOrder
    tag_name?: SortOrder
    _count?: TagsCountOrderByAggregateInput
    _avg?: TagsAvgOrderByAggregateInput
    _max?: TagsMaxOrderByAggregateInput
    _min?: TagsMinOrderByAggregateInput
    _sum?: TagsSumOrderByAggregateInput
  }

  export type TagsScalarWhereWithAggregatesInput = {
    AND?: TagsScalarWhereWithAggregatesInput | TagsScalarWhereWithAggregatesInput[]
    OR?: TagsScalarWhereWithAggregatesInput[]
    NOT?: TagsScalarWhereWithAggregatesInput | TagsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Tags"> | number
    tag_name?: StringWithAggregatesFilter<"Tags"> | string
  }

  export type ItemTagsWhereInput = {
    AND?: ItemTagsWhereInput | ItemTagsWhereInput[]
    OR?: ItemTagsWhereInput[]
    NOT?: ItemTagsWhereInput | ItemTagsWhereInput[]
    tag_id?: IntFilter<"ItemTags"> | number
    item_id?: IntFilter<"ItemTags"> | number
    tags?: XOR<TagsRelationFilter, TagsWhereInput>
    items?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }

  export type ItemTagsOrderByWithRelationInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
    tags?: TagsOrderByWithRelationInput
    items?: ItemsOrderByWithRelationInput
  }

  export type ItemTagsWhereUniqueInput = Prisma.AtLeast<{
    tag_id_item_id?: ItemTagsTag_idItem_idCompoundUniqueInput
    AND?: ItemTagsWhereInput | ItemTagsWhereInput[]
    OR?: ItemTagsWhereInput[]
    NOT?: ItemTagsWhereInput | ItemTagsWhereInput[]
    tag_id?: IntFilter<"ItemTags"> | number
    item_id?: IntFilter<"ItemTags"> | number
    tags?: XOR<TagsRelationFilter, TagsWhereInput>
    items?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }, "tag_id_item_id">

  export type ItemTagsOrderByWithAggregationInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
    _count?: ItemTagsCountOrderByAggregateInput
    _avg?: ItemTagsAvgOrderByAggregateInput
    _max?: ItemTagsMaxOrderByAggregateInput
    _min?: ItemTagsMinOrderByAggregateInput
    _sum?: ItemTagsSumOrderByAggregateInput
  }

  export type ItemTagsScalarWhereWithAggregatesInput = {
    AND?: ItemTagsScalarWhereWithAggregatesInput | ItemTagsScalarWhereWithAggregatesInput[]
    OR?: ItemTagsScalarWhereWithAggregatesInput[]
    NOT?: ItemTagsScalarWhereWithAggregatesInput | ItemTagsScalarWhereWithAggregatesInput[]
    tag_id?: IntWithAggregatesFilter<"ItemTags"> | number
    item_id?: IntWithAggregatesFilter<"ItemTags"> | number
  }

  export type ItemsWhereInput = {
    AND?: ItemsWhereInput | ItemsWhereInput[]
    OR?: ItemsWhereInput[]
    NOT?: ItemsWhereInput | ItemsWhereInput[]
    id?: IntFilter<"Items"> | number
    name?: StringFilter<"Items"> | string
    collection_id?: IntFilter<"Items"> | number
    custom_string1_value?: StringNullableFilter<"Items"> | string | null
    custom_string2_value?: StringNullableFilter<"Items"> | string | null
    custom_string3_value?: StringNullableFilter<"Items"> | string | null
    custom_int1_value?: IntNullableFilter<"Items"> | number | null
    custom_int2_value?: IntNullableFilter<"Items"> | number | null
    custom_int3_value?: IntNullableFilter<"Items"> | number | null
    custom_text1_value?: StringNullableFilter<"Items"> | string | null
    custom_text2_value?: StringNullableFilter<"Items"> | string | null
    custom_text3_value?: StringNullableFilter<"Items"> | string | null
    custom_boolean1_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean2_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean3_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_date1_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date2_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date3_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    tags?: ItemTagsListRelationFilter
    collection?: XOR<CollectionsRelationFilter, CollectionsWhereInput>
    Comment?: CommentsListRelationFilter
    Like?: LikesListRelationFilter
  }

  export type ItemsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    custom_string1_value?: SortOrderInput | SortOrder
    custom_string2_value?: SortOrderInput | SortOrder
    custom_string3_value?: SortOrderInput | SortOrder
    custom_int1_value?: SortOrderInput | SortOrder
    custom_int2_value?: SortOrderInput | SortOrder
    custom_int3_value?: SortOrderInput | SortOrder
    custom_text1_value?: SortOrderInput | SortOrder
    custom_text2_value?: SortOrderInput | SortOrder
    custom_text3_value?: SortOrderInput | SortOrder
    custom_boolean1_value?: SortOrderInput | SortOrder
    custom_boolean2_value?: SortOrderInput | SortOrder
    custom_boolean3_value?: SortOrderInput | SortOrder
    custom_date1_value?: SortOrderInput | SortOrder
    custom_date2_value?: SortOrderInput | SortOrder
    custom_date3_value?: SortOrderInput | SortOrder
    tags?: ItemTagsOrderByRelationAggregateInput
    collection?: CollectionsOrderByWithRelationInput
    Comment?: CommentsOrderByRelationAggregateInput
    Like?: LikesOrderByRelationAggregateInput
  }

  export type ItemsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ItemsWhereInput | ItemsWhereInput[]
    OR?: ItemsWhereInput[]
    NOT?: ItemsWhereInput | ItemsWhereInput[]
    name?: StringFilter<"Items"> | string
    collection_id?: IntFilter<"Items"> | number
    custom_string1_value?: StringNullableFilter<"Items"> | string | null
    custom_string2_value?: StringNullableFilter<"Items"> | string | null
    custom_string3_value?: StringNullableFilter<"Items"> | string | null
    custom_int1_value?: IntNullableFilter<"Items"> | number | null
    custom_int2_value?: IntNullableFilter<"Items"> | number | null
    custom_int3_value?: IntNullableFilter<"Items"> | number | null
    custom_text1_value?: StringNullableFilter<"Items"> | string | null
    custom_text2_value?: StringNullableFilter<"Items"> | string | null
    custom_text3_value?: StringNullableFilter<"Items"> | string | null
    custom_boolean1_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean2_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean3_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_date1_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date2_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date3_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    tags?: ItemTagsListRelationFilter
    collection?: XOR<CollectionsRelationFilter, CollectionsWhereInput>
    Comment?: CommentsListRelationFilter
    Like?: LikesListRelationFilter
  }, "id">

  export type ItemsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    custom_string1_value?: SortOrderInput | SortOrder
    custom_string2_value?: SortOrderInput | SortOrder
    custom_string3_value?: SortOrderInput | SortOrder
    custom_int1_value?: SortOrderInput | SortOrder
    custom_int2_value?: SortOrderInput | SortOrder
    custom_int3_value?: SortOrderInput | SortOrder
    custom_text1_value?: SortOrderInput | SortOrder
    custom_text2_value?: SortOrderInput | SortOrder
    custom_text3_value?: SortOrderInput | SortOrder
    custom_boolean1_value?: SortOrderInput | SortOrder
    custom_boolean2_value?: SortOrderInput | SortOrder
    custom_boolean3_value?: SortOrderInput | SortOrder
    custom_date1_value?: SortOrderInput | SortOrder
    custom_date2_value?: SortOrderInput | SortOrder
    custom_date3_value?: SortOrderInput | SortOrder
    _count?: ItemsCountOrderByAggregateInput
    _avg?: ItemsAvgOrderByAggregateInput
    _max?: ItemsMaxOrderByAggregateInput
    _min?: ItemsMinOrderByAggregateInput
    _sum?: ItemsSumOrderByAggregateInput
  }

  export type ItemsScalarWhereWithAggregatesInput = {
    AND?: ItemsScalarWhereWithAggregatesInput | ItemsScalarWhereWithAggregatesInput[]
    OR?: ItemsScalarWhereWithAggregatesInput[]
    NOT?: ItemsScalarWhereWithAggregatesInput | ItemsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Items"> | number
    name?: StringWithAggregatesFilter<"Items"> | string
    collection_id?: IntWithAggregatesFilter<"Items"> | number
    custom_string1_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_string2_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_string3_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_int1_value?: IntNullableWithAggregatesFilter<"Items"> | number | null
    custom_int2_value?: IntNullableWithAggregatesFilter<"Items"> | number | null
    custom_int3_value?: IntNullableWithAggregatesFilter<"Items"> | number | null
    custom_text1_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_text2_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_text3_value?: StringNullableWithAggregatesFilter<"Items"> | string | null
    custom_boolean1_value?: BoolNullableWithAggregatesFilter<"Items"> | boolean | null
    custom_boolean2_value?: BoolNullableWithAggregatesFilter<"Items"> | boolean | null
    custom_boolean3_value?: BoolNullableWithAggregatesFilter<"Items"> | boolean | null
    custom_date1_value?: DateTimeNullableWithAggregatesFilter<"Items"> | Date | string | null
    custom_date2_value?: DateTimeNullableWithAggregatesFilter<"Items"> | Date | string | null
    custom_date3_value?: DateTimeNullableWithAggregatesFilter<"Items"> | Date | string | null
  }

  export type CommentsWhereInput = {
    AND?: CommentsWhereInput | CommentsWhereInput[]
    OR?: CommentsWhereInput[]
    NOT?: CommentsWhereInput | CommentsWhereInput[]
    id?: IntFilter<"Comments"> | number
    content?: StringFilter<"Comments"> | string
    user_id?: IntFilter<"Comments"> | number
    item_id?: IntFilter<"Comments"> | number
    user?: XOR<UsersRelationFilter, UsersWhereInput>
    item?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }

  export type CommentsOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    user?: UsersOrderByWithRelationInput
    item?: ItemsOrderByWithRelationInput
  }

  export type CommentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CommentsWhereInput | CommentsWhereInput[]
    OR?: CommentsWhereInput[]
    NOT?: CommentsWhereInput | CommentsWhereInput[]
    content?: StringFilter<"Comments"> | string
    user_id?: IntFilter<"Comments"> | number
    item_id?: IntFilter<"Comments"> | number
    user?: XOR<UsersRelationFilter, UsersWhereInput>
    item?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }, "id">

  export type CommentsOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    _count?: CommentsCountOrderByAggregateInput
    _avg?: CommentsAvgOrderByAggregateInput
    _max?: CommentsMaxOrderByAggregateInput
    _min?: CommentsMinOrderByAggregateInput
    _sum?: CommentsSumOrderByAggregateInput
  }

  export type CommentsScalarWhereWithAggregatesInput = {
    AND?: CommentsScalarWhereWithAggregatesInput | CommentsScalarWhereWithAggregatesInput[]
    OR?: CommentsScalarWhereWithAggregatesInput[]
    NOT?: CommentsScalarWhereWithAggregatesInput | CommentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Comments"> | number
    content?: StringWithAggregatesFilter<"Comments"> | string
    user_id?: IntWithAggregatesFilter<"Comments"> | number
    item_id?: IntWithAggregatesFilter<"Comments"> | number
  }

  export type LikesWhereInput = {
    AND?: LikesWhereInput | LikesWhereInput[]
    OR?: LikesWhereInput[]
    NOT?: LikesWhereInput | LikesWhereInput[]
    id?: IntFilter<"Likes"> | number
    user_id?: IntFilter<"Likes"> | number
    item_id?: IntFilter<"Likes"> | number
    user?: XOR<UsersRelationFilter, UsersWhereInput>
    item?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }

  export type LikesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    user?: UsersOrderByWithRelationInput
    item?: ItemsOrderByWithRelationInput
  }

  export type LikesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LikesWhereInput | LikesWhereInput[]
    OR?: LikesWhereInput[]
    NOT?: LikesWhereInput | LikesWhereInput[]
    user_id?: IntFilter<"Likes"> | number
    item_id?: IntFilter<"Likes"> | number
    user?: XOR<UsersRelationFilter, UsersWhereInput>
    item?: XOR<ItemsRelationFilter, ItemsWhereInput>
  }, "id">

  export type LikesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    _count?: LikesCountOrderByAggregateInput
    _avg?: LikesAvgOrderByAggregateInput
    _max?: LikesMaxOrderByAggregateInput
    _min?: LikesMinOrderByAggregateInput
    _sum?: LikesSumOrderByAggregateInput
  }

  export type LikesScalarWhereWithAggregatesInput = {
    AND?: LikesScalarWhereWithAggregatesInput | LikesScalarWhereWithAggregatesInput[]
    OR?: LikesScalarWhereWithAggregatesInput[]
    NOT?: LikesScalarWhereWithAggregatesInput | LikesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Likes"> | number
    user_id?: IntWithAggregatesFilter<"Likes"> | number
    item_id?: IntWithAggregatesFilter<"Likes"> | number
  }

  export type UsersCreateInput = {
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsCreateNestedManyWithoutUserInput
    Comment?: CommentsCreateNestedManyWithoutUserInput
    Like?: LikesCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsUncheckedCreateNestedManyWithoutUserInput
    Comment?: CommentsUncheckedCreateNestedManyWithoutUserInput
    Like?: LikesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUpdateManyWithoutUserNestedInput
    Comment?: CommentsUpdateManyWithoutUserNestedInput
    Like?: LikesUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUncheckedUpdateManyWithoutUserNestedInput
    Comment?: CommentsUncheckedUpdateManyWithoutUserNestedInput
    Like?: LikesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UsersCreateManyInput = {
    id?: number
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
  }

  export type UsersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
  }

  export type CategoriesCreateInput = {
    category_name: string
    Collection?: CollectionsCreateNestedManyWithoutCategoryInput
  }

  export type CategoriesUncheckedCreateInput = {
    id?: number
    category_name: string
    Collection?: CollectionsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoriesUpdateInput = {
    category_name?: StringFieldUpdateOperationsInput | string
    Collection?: CollectionsUpdateManyWithoutCategoryNestedInput
  }

  export type CategoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
    Collection?: CollectionsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoriesCreateManyInput = {
    id?: number
    category_name: string
  }

  export type CategoriesUpdateManyMutationInput = {
    category_name?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
  }

  export type CollectionsCreateInput = {
    name: string
    description?: string | null
    image_url: string
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    User: UsersCreateNestedOneWithoutCollectionInput
    category: CategoriesCreateNestedOneWithoutCollectionInput
    Item?: ItemsCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    user_id: number
    category_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    Item?: ItemsUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UsersUpdateOneRequiredWithoutCollectionNestedInput
    category?: CategoriesUpdateOneRequiredWithoutCollectionNestedInput
    Item?: ItemsUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    Item?: ItemsUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    user_id: number
    category_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
  }

  export type CollectionsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TagsCreateInput = {
    tag_name: string
    items?: ItemTagsCreateNestedManyWithoutTagsInput
  }

  export type TagsUncheckedCreateInput = {
    id?: number
    tag_name: string
    items?: ItemTagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type TagsUpdateInput = {
    tag_name?: StringFieldUpdateOperationsInput | string
    items?: ItemTagsUpdateManyWithoutTagsNestedInput
  }

  export type TagsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tag_name?: StringFieldUpdateOperationsInput | string
    items?: ItemTagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type TagsCreateManyInput = {
    id?: number
    tag_name: string
  }

  export type TagsUpdateManyMutationInput = {
    tag_name?: StringFieldUpdateOperationsInput | string
  }

  export type TagsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tag_name?: StringFieldUpdateOperationsInput | string
  }

  export type ItemTagsCreateInput = {
    tags: TagsCreateNestedOneWithoutItemsInput
    items: ItemsCreateNestedOneWithoutTagsInput
  }

  export type ItemTagsUncheckedCreateInput = {
    tag_id: number
    item_id: number
  }

  export type ItemTagsUpdateInput = {
    tags?: TagsUpdateOneRequiredWithoutItemsNestedInput
    items?: ItemsUpdateOneRequiredWithoutTagsNestedInput
  }

  export type ItemTagsUncheckedUpdateInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type ItemTagsCreateManyInput = {
    tag_id: number
    item_id: number
  }

  export type ItemTagsUpdateManyMutationInput = {

  }

  export type ItemTagsUncheckedUpdateManyInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type ItemsCreateInput = {
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsCreateNestedManyWithoutItemsInput
    collection: CollectionsCreateNestedOneWithoutItemInput
    Comment?: CommentsCreateNestedManyWithoutItemInput
    Like?: LikesCreateNestedManyWithoutItemInput
  }

  export type ItemsUncheckedCreateInput = {
    id?: number
    name: string
    collection_id: number
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsUncheckedCreateNestedManyWithoutItemsInput
    Comment?: CommentsUncheckedCreateNestedManyWithoutItemInput
    Like?: LikesUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUpdateManyWithoutItemsNestedInput
    collection?: CollectionsUpdateOneRequiredWithoutItemNestedInput
    Comment?: CommentsUpdateManyWithoutItemNestedInput
    Like?: LikesUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: IntFieldUpdateOperationsInput | number
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUncheckedUpdateManyWithoutItemsNestedInput
    Comment?: CommentsUncheckedUpdateManyWithoutItemNestedInput
    Like?: LikesUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemsCreateManyInput = {
    id?: number
    name: string
    collection_id: number
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
  }

  export type ItemsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: IntFieldUpdateOperationsInput | number
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CommentsCreateInput = {
    content: string
    user: UsersCreateNestedOneWithoutCommentInput
    item: ItemsCreateNestedOneWithoutCommentInput
  }

  export type CommentsUncheckedCreateInput = {
    id?: number
    content: string
    user_id: number
    item_id: number
  }

  export type CommentsUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutCommentNestedInput
    item?: ItemsUpdateOneRequiredWithoutCommentNestedInput
  }

  export type CommentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type CommentsCreateManyInput = {
    id?: number
    content: string
    user_id: number
    item_id: number
  }

  export type CommentsUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
  }

  export type CommentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesCreateInput = {
    user: UsersCreateNestedOneWithoutLikeInput
    item: ItemsCreateNestedOneWithoutLikeInput
  }

  export type LikesUncheckedCreateInput = {
    id?: number
    user_id: number
    item_id: number
  }

  export type LikesUpdateInput = {
    user?: UsersUpdateOneRequiredWithoutLikeNestedInput
    item?: ItemsUpdateOneRequiredWithoutLikeNestedInput
  }

  export type LikesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesCreateManyInput = {
    id?: number
    user_id: number
    item_id: number
  }

  export type LikesUpdateManyMutationInput = {

  }

  export type LikesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Enumuser_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_statusFilter<$PrismaModel> | $Enums.user_status
  }

  export type Enumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type CollectionsListRelationFilter = {
    every?: CollectionsWhereInput
    some?: CollectionsWhereInput
    none?: CollectionsWhereInput
  }

  export type CommentsListRelationFilter = {
    every?: CommentsWhereInput
    some?: CommentsWhereInput
    none?: CommentsWhereInput
  }

  export type LikesListRelationFilter = {
    every?: LikesWhereInput
    some?: LikesWhereInput
    none?: LikesWhereInput
  }

  export type CollectionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LikesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    role?: SortOrder
  }

  export type UsersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    role?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    role?: SortOrder
  }

  export type UsersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enumuser_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_statusWithAggregatesFilter<$PrismaModel> | $Enums.user_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_statusFilter<$PrismaModel>
    _max?: NestedEnumuser_statusFilter<$PrismaModel>
  }

  export type Enumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type CategoriesCountOrderByAggregateInput = {
    id?: SortOrder
    category_name?: SortOrder
  }

  export type CategoriesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    category_name?: SortOrder
  }

  export type CategoriesMinOrderByAggregateInput = {
    id?: SortOrder
    category_name?: SortOrder
  }

  export type CategoriesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsersRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type CategoriesRelationFilter = {
    is?: CategoriesWhereInput
    isNot?: CategoriesWhereInput
  }

  export type ItemsListRelationFilter = {
    every?: ItemsWhereInput
    some?: ItemsWhereInput
    none?: ItemsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ItemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CollectionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
    custom_string1_state?: SortOrder
    custom_string1_name?: SortOrder
    custom_string2_state?: SortOrder
    custom_string2_name?: SortOrder
    custom_string3_state?: SortOrder
    custom_string3_name?: SortOrder
    custom_int1_state?: SortOrder
    custom_int1_name?: SortOrder
    custom_int2_state?: SortOrder
    custom_int2_name?: SortOrder
    custom_int3_state?: SortOrder
    custom_int3_name?: SortOrder
    custom_text1_state?: SortOrder
    custom_text1_name?: SortOrder
    custom_text2_state?: SortOrder
    custom_text2_name?: SortOrder
    custom_text3_state?: SortOrder
    custom_text3_name?: SortOrder
    custom_boolean1_state?: SortOrder
    custom_boolean1_name?: SortOrder
    custom_boolean2_state?: SortOrder
    custom_boolean2_name?: SortOrder
    custom_boolean3_state?: SortOrder
    custom_boolean3_name?: SortOrder
    custom_date1_state?: SortOrder
    custom_date1_name?: SortOrder
    custom_date2_state?: SortOrder
    custom_date2_name?: SortOrder
    custom_date3_state?: SortOrder
    custom_date3_name?: SortOrder
  }

  export type CollectionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
  }

  export type CollectionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
    custom_string1_state?: SortOrder
    custom_string1_name?: SortOrder
    custom_string2_state?: SortOrder
    custom_string2_name?: SortOrder
    custom_string3_state?: SortOrder
    custom_string3_name?: SortOrder
    custom_int1_state?: SortOrder
    custom_int1_name?: SortOrder
    custom_int2_state?: SortOrder
    custom_int2_name?: SortOrder
    custom_int3_state?: SortOrder
    custom_int3_name?: SortOrder
    custom_text1_state?: SortOrder
    custom_text1_name?: SortOrder
    custom_text2_state?: SortOrder
    custom_text2_name?: SortOrder
    custom_text3_state?: SortOrder
    custom_text3_name?: SortOrder
    custom_boolean1_state?: SortOrder
    custom_boolean1_name?: SortOrder
    custom_boolean2_state?: SortOrder
    custom_boolean2_name?: SortOrder
    custom_boolean3_state?: SortOrder
    custom_boolean3_name?: SortOrder
    custom_date1_state?: SortOrder
    custom_date1_name?: SortOrder
    custom_date2_state?: SortOrder
    custom_date2_name?: SortOrder
    custom_date3_state?: SortOrder
    custom_date3_name?: SortOrder
  }

  export type CollectionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
    custom_string1_state?: SortOrder
    custom_string1_name?: SortOrder
    custom_string2_state?: SortOrder
    custom_string2_name?: SortOrder
    custom_string3_state?: SortOrder
    custom_string3_name?: SortOrder
    custom_int1_state?: SortOrder
    custom_int1_name?: SortOrder
    custom_int2_state?: SortOrder
    custom_int2_name?: SortOrder
    custom_int3_state?: SortOrder
    custom_int3_name?: SortOrder
    custom_text1_state?: SortOrder
    custom_text1_name?: SortOrder
    custom_text2_state?: SortOrder
    custom_text2_name?: SortOrder
    custom_text3_state?: SortOrder
    custom_text3_name?: SortOrder
    custom_boolean1_state?: SortOrder
    custom_boolean1_name?: SortOrder
    custom_boolean2_state?: SortOrder
    custom_boolean2_name?: SortOrder
    custom_boolean3_state?: SortOrder
    custom_boolean3_name?: SortOrder
    custom_date1_state?: SortOrder
    custom_date1_name?: SortOrder
    custom_date2_state?: SortOrder
    custom_date2_name?: SortOrder
    custom_date3_state?: SortOrder
    custom_date3_name?: SortOrder
  }

  export type CollectionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    category_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ItemTagsListRelationFilter = {
    every?: ItemTagsWhereInput
    some?: ItemTagsWhereInput
    none?: ItemTagsWhereInput
  }

  export type ItemTagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TagsCountOrderByAggregateInput = {
    id?: SortOrder
    tag_name?: SortOrder
  }

  export type TagsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TagsMaxOrderByAggregateInput = {
    id?: SortOrder
    tag_name?: SortOrder
  }

  export type TagsMinOrderByAggregateInput = {
    id?: SortOrder
    tag_name?: SortOrder
  }

  export type TagsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TagsRelationFilter = {
    is?: TagsWhereInput
    isNot?: TagsWhereInput
  }

  export type ItemsRelationFilter = {
    is?: ItemsWhereInput
    isNot?: ItemsWhereInput
  }

  export type ItemTagsTag_idItem_idCompoundUniqueInput = {
    tag_id: number
    item_id: number
  }

  export type ItemTagsCountOrderByAggregateInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
  }

  export type ItemTagsAvgOrderByAggregateInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
  }

  export type ItemTagsMaxOrderByAggregateInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
  }

  export type ItemTagsMinOrderByAggregateInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
  }

  export type ItemTagsSumOrderByAggregateInput = {
    tag_id?: SortOrder
    item_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CollectionsRelationFilter = {
    is?: CollectionsWhereInput
    isNot?: CollectionsWhereInput
  }

  export type ItemsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    custom_string1_value?: SortOrder
    custom_string2_value?: SortOrder
    custom_string3_value?: SortOrder
    custom_int1_value?: SortOrder
    custom_int2_value?: SortOrder
    custom_int3_value?: SortOrder
    custom_text1_value?: SortOrder
    custom_text2_value?: SortOrder
    custom_text3_value?: SortOrder
    custom_boolean1_value?: SortOrder
    custom_boolean2_value?: SortOrder
    custom_boolean3_value?: SortOrder
    custom_date1_value?: SortOrder
    custom_date2_value?: SortOrder
    custom_date3_value?: SortOrder
  }

  export type ItemsAvgOrderByAggregateInput = {
    id?: SortOrder
    collection_id?: SortOrder
    custom_int1_value?: SortOrder
    custom_int2_value?: SortOrder
    custom_int3_value?: SortOrder
  }

  export type ItemsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    custom_string1_value?: SortOrder
    custom_string2_value?: SortOrder
    custom_string3_value?: SortOrder
    custom_int1_value?: SortOrder
    custom_int2_value?: SortOrder
    custom_int3_value?: SortOrder
    custom_text1_value?: SortOrder
    custom_text2_value?: SortOrder
    custom_text3_value?: SortOrder
    custom_boolean1_value?: SortOrder
    custom_boolean2_value?: SortOrder
    custom_boolean3_value?: SortOrder
    custom_date1_value?: SortOrder
    custom_date2_value?: SortOrder
    custom_date3_value?: SortOrder
  }

  export type ItemsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    custom_string1_value?: SortOrder
    custom_string2_value?: SortOrder
    custom_string3_value?: SortOrder
    custom_int1_value?: SortOrder
    custom_int2_value?: SortOrder
    custom_int3_value?: SortOrder
    custom_text1_value?: SortOrder
    custom_text2_value?: SortOrder
    custom_text3_value?: SortOrder
    custom_boolean1_value?: SortOrder
    custom_boolean2_value?: SortOrder
    custom_boolean3_value?: SortOrder
    custom_date1_value?: SortOrder
    custom_date2_value?: SortOrder
    custom_date3_value?: SortOrder
  }

  export type ItemsSumOrderByAggregateInput = {
    id?: SortOrder
    collection_id?: SortOrder
    custom_int1_value?: SortOrder
    custom_int2_value?: SortOrder
    custom_int3_value?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CommentsCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type CommentsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type CommentsMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type CommentsMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type CommentsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type LikesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type LikesAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type LikesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type LikesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type LikesSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
  }

  export type CollectionsCreateNestedManyWithoutUserInput = {
    create?: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput> | CollectionsCreateWithoutUserInput[] | CollectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutUserInput | CollectionsCreateOrConnectWithoutUserInput[]
    createMany?: CollectionsCreateManyUserInputEnvelope
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
  }

  export type CommentsCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput> | CommentsCreateWithoutUserInput[] | CommentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutUserInput | CommentsCreateOrConnectWithoutUserInput[]
    createMany?: CommentsCreateManyUserInputEnvelope
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
  }

  export type LikesCreateNestedManyWithoutUserInput = {
    create?: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput> | LikesCreateWithoutUserInput[] | LikesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutUserInput | LikesCreateOrConnectWithoutUserInput[]
    createMany?: LikesCreateManyUserInputEnvelope
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
  }

  export type CollectionsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput> | CollectionsCreateWithoutUserInput[] | CollectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutUserInput | CollectionsCreateOrConnectWithoutUserInput[]
    createMany?: CollectionsCreateManyUserInputEnvelope
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
  }

  export type CommentsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput> | CommentsCreateWithoutUserInput[] | CommentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutUserInput | CommentsCreateOrConnectWithoutUserInput[]
    createMany?: CommentsCreateManyUserInputEnvelope
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
  }

  export type LikesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput> | LikesCreateWithoutUserInput[] | LikesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutUserInput | LikesCreateOrConnectWithoutUserInput[]
    createMany?: LikesCreateManyUserInputEnvelope
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Enumuser_statusFieldUpdateOperationsInput = {
    set?: $Enums.user_status
  }

  export type Enumuser_roleFieldUpdateOperationsInput = {
    set?: $Enums.user_role
  }

  export type CollectionsUpdateManyWithoutUserNestedInput = {
    create?: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput> | CollectionsCreateWithoutUserInput[] | CollectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutUserInput | CollectionsCreateOrConnectWithoutUserInput[]
    upsert?: CollectionsUpsertWithWhereUniqueWithoutUserInput | CollectionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CollectionsCreateManyUserInputEnvelope
    set?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    disconnect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    delete?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    update?: CollectionsUpdateWithWhereUniqueWithoutUserInput | CollectionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CollectionsUpdateManyWithWhereWithoutUserInput | CollectionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
  }

  export type CommentsUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput> | CommentsCreateWithoutUserInput[] | CommentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutUserInput | CommentsCreateOrConnectWithoutUserInput[]
    upsert?: CommentsUpsertWithWhereUniqueWithoutUserInput | CommentsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentsCreateManyUserInputEnvelope
    set?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    disconnect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    delete?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    update?: CommentsUpdateWithWhereUniqueWithoutUserInput | CommentsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentsUpdateManyWithWhereWithoutUserInput | CommentsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
  }

  export type LikesUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput> | LikesCreateWithoutUserInput[] | LikesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutUserInput | LikesCreateOrConnectWithoutUserInput[]
    upsert?: LikesUpsertWithWhereUniqueWithoutUserInput | LikesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikesCreateManyUserInputEnvelope
    set?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    disconnect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    delete?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    update?: LikesUpdateWithWhereUniqueWithoutUserInput | LikesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikesUpdateManyWithWhereWithoutUserInput | LikesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikesScalarWhereInput | LikesScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CollectionsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput> | CollectionsCreateWithoutUserInput[] | CollectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutUserInput | CollectionsCreateOrConnectWithoutUserInput[]
    upsert?: CollectionsUpsertWithWhereUniqueWithoutUserInput | CollectionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CollectionsCreateManyUserInputEnvelope
    set?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    disconnect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    delete?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    update?: CollectionsUpdateWithWhereUniqueWithoutUserInput | CollectionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CollectionsUpdateManyWithWhereWithoutUserInput | CollectionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
  }

  export type CommentsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput> | CommentsCreateWithoutUserInput[] | CommentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutUserInput | CommentsCreateOrConnectWithoutUserInput[]
    upsert?: CommentsUpsertWithWhereUniqueWithoutUserInput | CommentsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentsCreateManyUserInputEnvelope
    set?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    disconnect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    delete?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    update?: CommentsUpdateWithWhereUniqueWithoutUserInput | CommentsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentsUpdateManyWithWhereWithoutUserInput | CommentsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
  }

  export type LikesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput> | LikesCreateWithoutUserInput[] | LikesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutUserInput | LikesCreateOrConnectWithoutUserInput[]
    upsert?: LikesUpsertWithWhereUniqueWithoutUserInput | LikesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikesCreateManyUserInputEnvelope
    set?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    disconnect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    delete?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    update?: LikesUpdateWithWhereUniqueWithoutUserInput | LikesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikesUpdateManyWithWhereWithoutUserInput | LikesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikesScalarWhereInput | LikesScalarWhereInput[]
  }

  export type CollectionsCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput> | CollectionsCreateWithoutCategoryInput[] | CollectionsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutCategoryInput | CollectionsCreateOrConnectWithoutCategoryInput[]
    createMany?: CollectionsCreateManyCategoryInputEnvelope
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
  }

  export type CollectionsUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput> | CollectionsCreateWithoutCategoryInput[] | CollectionsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutCategoryInput | CollectionsCreateOrConnectWithoutCategoryInput[]
    createMany?: CollectionsCreateManyCategoryInputEnvelope
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
  }

  export type CollectionsUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput> | CollectionsCreateWithoutCategoryInput[] | CollectionsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutCategoryInput | CollectionsCreateOrConnectWithoutCategoryInput[]
    upsert?: CollectionsUpsertWithWhereUniqueWithoutCategoryInput | CollectionsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CollectionsCreateManyCategoryInputEnvelope
    set?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    disconnect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    delete?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    update?: CollectionsUpdateWithWhereUniqueWithoutCategoryInput | CollectionsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CollectionsUpdateManyWithWhereWithoutCategoryInput | CollectionsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
  }

  export type CollectionsUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput> | CollectionsCreateWithoutCategoryInput[] | CollectionsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionsCreateOrConnectWithoutCategoryInput | CollectionsCreateOrConnectWithoutCategoryInput[]
    upsert?: CollectionsUpsertWithWhereUniqueWithoutCategoryInput | CollectionsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CollectionsCreateManyCategoryInputEnvelope
    set?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    disconnect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    delete?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    connect?: CollectionsWhereUniqueInput | CollectionsWhereUniqueInput[]
    update?: CollectionsUpdateWithWhereUniqueWithoutCategoryInput | CollectionsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CollectionsUpdateManyWithWhereWithoutCategoryInput | CollectionsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutCollectionInput = {
    create?: XOR<UsersCreateWithoutCollectionInput, UsersUncheckedCreateWithoutCollectionInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCollectionInput
    connect?: UsersWhereUniqueInput
  }

  export type CategoriesCreateNestedOneWithoutCollectionInput = {
    create?: XOR<CategoriesCreateWithoutCollectionInput, CategoriesUncheckedCreateWithoutCollectionInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutCollectionInput
    connect?: CategoriesWhereUniqueInput
  }

  export type ItemsCreateNestedManyWithoutCollectionInput = {
    create?: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput> | ItemsCreateWithoutCollectionInput[] | ItemsUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ItemsCreateOrConnectWithoutCollectionInput | ItemsCreateOrConnectWithoutCollectionInput[]
    createMany?: ItemsCreateManyCollectionInputEnvelope
    connect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
  }

  export type ItemsUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput> | ItemsCreateWithoutCollectionInput[] | ItemsUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ItemsCreateOrConnectWithoutCollectionInput | ItemsCreateOrConnectWithoutCollectionInput[]
    createMany?: ItemsCreateManyCollectionInputEnvelope
    connect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UsersUpdateOneRequiredWithoutCollectionNestedInput = {
    create?: XOR<UsersCreateWithoutCollectionInput, UsersUncheckedCreateWithoutCollectionInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCollectionInput
    upsert?: UsersUpsertWithoutCollectionInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCollectionInput, UsersUpdateWithoutCollectionInput>, UsersUncheckedUpdateWithoutCollectionInput>
  }

  export type CategoriesUpdateOneRequiredWithoutCollectionNestedInput = {
    create?: XOR<CategoriesCreateWithoutCollectionInput, CategoriesUncheckedCreateWithoutCollectionInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutCollectionInput
    upsert?: CategoriesUpsertWithoutCollectionInput
    connect?: CategoriesWhereUniqueInput
    update?: XOR<XOR<CategoriesUpdateToOneWithWhereWithoutCollectionInput, CategoriesUpdateWithoutCollectionInput>, CategoriesUncheckedUpdateWithoutCollectionInput>
  }

  export type ItemsUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput> | ItemsCreateWithoutCollectionInput[] | ItemsUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ItemsCreateOrConnectWithoutCollectionInput | ItemsCreateOrConnectWithoutCollectionInput[]
    upsert?: ItemsUpsertWithWhereUniqueWithoutCollectionInput | ItemsUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: ItemsCreateManyCollectionInputEnvelope
    set?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    disconnect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    delete?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    connect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    update?: ItemsUpdateWithWhereUniqueWithoutCollectionInput | ItemsUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: ItemsUpdateManyWithWhereWithoutCollectionInput | ItemsUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: ItemsScalarWhereInput | ItemsScalarWhereInput[]
  }

  export type ItemsUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput> | ItemsCreateWithoutCollectionInput[] | ItemsUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ItemsCreateOrConnectWithoutCollectionInput | ItemsCreateOrConnectWithoutCollectionInput[]
    upsert?: ItemsUpsertWithWhereUniqueWithoutCollectionInput | ItemsUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: ItemsCreateManyCollectionInputEnvelope
    set?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    disconnect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    delete?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    connect?: ItemsWhereUniqueInput | ItemsWhereUniqueInput[]
    update?: ItemsUpdateWithWhereUniqueWithoutCollectionInput | ItemsUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: ItemsUpdateManyWithWhereWithoutCollectionInput | ItemsUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: ItemsScalarWhereInput | ItemsScalarWhereInput[]
  }

  export type ItemTagsCreateNestedManyWithoutTagsInput = {
    create?: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput> | ItemTagsCreateWithoutTagsInput[] | ItemTagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutTagsInput | ItemTagsCreateOrConnectWithoutTagsInput[]
    createMany?: ItemTagsCreateManyTagsInputEnvelope
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
  }

  export type ItemTagsUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput> | ItemTagsCreateWithoutTagsInput[] | ItemTagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutTagsInput | ItemTagsCreateOrConnectWithoutTagsInput[]
    createMany?: ItemTagsCreateManyTagsInputEnvelope
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
  }

  export type ItemTagsUpdateManyWithoutTagsNestedInput = {
    create?: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput> | ItemTagsCreateWithoutTagsInput[] | ItemTagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutTagsInput | ItemTagsCreateOrConnectWithoutTagsInput[]
    upsert?: ItemTagsUpsertWithWhereUniqueWithoutTagsInput | ItemTagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: ItemTagsCreateManyTagsInputEnvelope
    set?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    disconnect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    delete?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    update?: ItemTagsUpdateWithWhereUniqueWithoutTagsInput | ItemTagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: ItemTagsUpdateManyWithWhereWithoutTagsInput | ItemTagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
  }

  export type ItemTagsUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput> | ItemTagsCreateWithoutTagsInput[] | ItemTagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutTagsInput | ItemTagsCreateOrConnectWithoutTagsInput[]
    upsert?: ItemTagsUpsertWithWhereUniqueWithoutTagsInput | ItemTagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: ItemTagsCreateManyTagsInputEnvelope
    set?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    disconnect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    delete?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    update?: ItemTagsUpdateWithWhereUniqueWithoutTagsInput | ItemTagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: ItemTagsUpdateManyWithWhereWithoutTagsInput | ItemTagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
  }

  export type TagsCreateNestedOneWithoutItemsInput = {
    create?: XOR<TagsCreateWithoutItemsInput, TagsUncheckedCreateWithoutItemsInput>
    connectOrCreate?: TagsCreateOrConnectWithoutItemsInput
    connect?: TagsWhereUniqueInput
  }

  export type ItemsCreateNestedOneWithoutTagsInput = {
    create?: XOR<ItemsCreateWithoutTagsInput, ItemsUncheckedCreateWithoutTagsInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutTagsInput
    connect?: ItemsWhereUniqueInput
  }

  export type TagsUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<TagsCreateWithoutItemsInput, TagsUncheckedCreateWithoutItemsInput>
    connectOrCreate?: TagsCreateOrConnectWithoutItemsInput
    upsert?: TagsUpsertWithoutItemsInput
    connect?: TagsWhereUniqueInput
    update?: XOR<XOR<TagsUpdateToOneWithWhereWithoutItemsInput, TagsUpdateWithoutItemsInput>, TagsUncheckedUpdateWithoutItemsInput>
  }

  export type ItemsUpdateOneRequiredWithoutTagsNestedInput = {
    create?: XOR<ItemsCreateWithoutTagsInput, ItemsUncheckedCreateWithoutTagsInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutTagsInput
    upsert?: ItemsUpsertWithoutTagsInput
    connect?: ItemsWhereUniqueInput
    update?: XOR<XOR<ItemsUpdateToOneWithWhereWithoutTagsInput, ItemsUpdateWithoutTagsInput>, ItemsUncheckedUpdateWithoutTagsInput>
  }

  export type ItemTagsCreateNestedManyWithoutItemsInput = {
    create?: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput> | ItemTagsCreateWithoutItemsInput[] | ItemTagsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutItemsInput | ItemTagsCreateOrConnectWithoutItemsInput[]
    createMany?: ItemTagsCreateManyItemsInputEnvelope
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
  }

  export type CollectionsCreateNestedOneWithoutItemInput = {
    create?: XOR<CollectionsCreateWithoutItemInput, CollectionsUncheckedCreateWithoutItemInput>
    connectOrCreate?: CollectionsCreateOrConnectWithoutItemInput
    connect?: CollectionsWhereUniqueInput
  }

  export type CommentsCreateNestedManyWithoutItemInput = {
    create?: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput> | CommentsCreateWithoutItemInput[] | CommentsUncheckedCreateWithoutItemInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutItemInput | CommentsCreateOrConnectWithoutItemInput[]
    createMany?: CommentsCreateManyItemInputEnvelope
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
  }

  export type LikesCreateNestedManyWithoutItemInput = {
    create?: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput> | LikesCreateWithoutItemInput[] | LikesUncheckedCreateWithoutItemInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutItemInput | LikesCreateOrConnectWithoutItemInput[]
    createMany?: LikesCreateManyItemInputEnvelope
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
  }

  export type ItemTagsUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput> | ItemTagsCreateWithoutItemsInput[] | ItemTagsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutItemsInput | ItemTagsCreateOrConnectWithoutItemsInput[]
    createMany?: ItemTagsCreateManyItemsInputEnvelope
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
  }

  export type CommentsUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput> | CommentsCreateWithoutItemInput[] | CommentsUncheckedCreateWithoutItemInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutItemInput | CommentsCreateOrConnectWithoutItemInput[]
    createMany?: CommentsCreateManyItemInputEnvelope
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
  }

  export type LikesUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput> | LikesCreateWithoutItemInput[] | LikesUncheckedCreateWithoutItemInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutItemInput | LikesCreateOrConnectWithoutItemInput[]
    createMany?: LikesCreateManyItemInputEnvelope
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ItemTagsUpdateManyWithoutItemsNestedInput = {
    create?: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput> | ItemTagsCreateWithoutItemsInput[] | ItemTagsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutItemsInput | ItemTagsCreateOrConnectWithoutItemsInput[]
    upsert?: ItemTagsUpsertWithWhereUniqueWithoutItemsInput | ItemTagsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: ItemTagsCreateManyItemsInputEnvelope
    set?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    disconnect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    delete?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    update?: ItemTagsUpdateWithWhereUniqueWithoutItemsInput | ItemTagsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: ItemTagsUpdateManyWithWhereWithoutItemsInput | ItemTagsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
  }

  export type CollectionsUpdateOneRequiredWithoutItemNestedInput = {
    create?: XOR<CollectionsCreateWithoutItemInput, CollectionsUncheckedCreateWithoutItemInput>
    connectOrCreate?: CollectionsCreateOrConnectWithoutItemInput
    upsert?: CollectionsUpsertWithoutItemInput
    connect?: CollectionsWhereUniqueInput
    update?: XOR<XOR<CollectionsUpdateToOneWithWhereWithoutItemInput, CollectionsUpdateWithoutItemInput>, CollectionsUncheckedUpdateWithoutItemInput>
  }

  export type CommentsUpdateManyWithoutItemNestedInput = {
    create?: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput> | CommentsCreateWithoutItemInput[] | CommentsUncheckedCreateWithoutItemInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutItemInput | CommentsCreateOrConnectWithoutItemInput[]
    upsert?: CommentsUpsertWithWhereUniqueWithoutItemInput | CommentsUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: CommentsCreateManyItemInputEnvelope
    set?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    disconnect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    delete?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    update?: CommentsUpdateWithWhereUniqueWithoutItemInput | CommentsUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: CommentsUpdateManyWithWhereWithoutItemInput | CommentsUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
  }

  export type LikesUpdateManyWithoutItemNestedInput = {
    create?: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput> | LikesCreateWithoutItemInput[] | LikesUncheckedCreateWithoutItemInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutItemInput | LikesCreateOrConnectWithoutItemInput[]
    upsert?: LikesUpsertWithWhereUniqueWithoutItemInput | LikesUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: LikesCreateManyItemInputEnvelope
    set?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    disconnect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    delete?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    update?: LikesUpdateWithWhereUniqueWithoutItemInput | LikesUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: LikesUpdateManyWithWhereWithoutItemInput | LikesUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: LikesScalarWhereInput | LikesScalarWhereInput[]
  }

  export type ItemTagsUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput> | ItemTagsCreateWithoutItemsInput[] | ItemTagsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: ItemTagsCreateOrConnectWithoutItemsInput | ItemTagsCreateOrConnectWithoutItemsInput[]
    upsert?: ItemTagsUpsertWithWhereUniqueWithoutItemsInput | ItemTagsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: ItemTagsCreateManyItemsInputEnvelope
    set?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    disconnect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    delete?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    connect?: ItemTagsWhereUniqueInput | ItemTagsWhereUniqueInput[]
    update?: ItemTagsUpdateWithWhereUniqueWithoutItemsInput | ItemTagsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: ItemTagsUpdateManyWithWhereWithoutItemsInput | ItemTagsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
  }

  export type CommentsUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput> | CommentsCreateWithoutItemInput[] | CommentsUncheckedCreateWithoutItemInput[]
    connectOrCreate?: CommentsCreateOrConnectWithoutItemInput | CommentsCreateOrConnectWithoutItemInput[]
    upsert?: CommentsUpsertWithWhereUniqueWithoutItemInput | CommentsUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: CommentsCreateManyItemInputEnvelope
    set?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    disconnect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    delete?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    connect?: CommentsWhereUniqueInput | CommentsWhereUniqueInput[]
    update?: CommentsUpdateWithWhereUniqueWithoutItemInput | CommentsUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: CommentsUpdateManyWithWhereWithoutItemInput | CommentsUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
  }

  export type LikesUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput> | LikesCreateWithoutItemInput[] | LikesUncheckedCreateWithoutItemInput[]
    connectOrCreate?: LikesCreateOrConnectWithoutItemInput | LikesCreateOrConnectWithoutItemInput[]
    upsert?: LikesUpsertWithWhereUniqueWithoutItemInput | LikesUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: LikesCreateManyItemInputEnvelope
    set?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    disconnect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    delete?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    connect?: LikesWhereUniqueInput | LikesWhereUniqueInput[]
    update?: LikesUpdateWithWhereUniqueWithoutItemInput | LikesUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: LikesUpdateManyWithWhereWithoutItemInput | LikesUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: LikesScalarWhereInput | LikesScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutCommentInput = {
    create?: XOR<UsersCreateWithoutCommentInput, UsersUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCommentInput
    connect?: UsersWhereUniqueInput
  }

  export type ItemsCreateNestedOneWithoutCommentInput = {
    create?: XOR<ItemsCreateWithoutCommentInput, ItemsUncheckedCreateWithoutCommentInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutCommentInput
    connect?: ItemsWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<UsersCreateWithoutCommentInput, UsersUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCommentInput
    upsert?: UsersUpsertWithoutCommentInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCommentInput, UsersUpdateWithoutCommentInput>, UsersUncheckedUpdateWithoutCommentInput>
  }

  export type ItemsUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<ItemsCreateWithoutCommentInput, ItemsUncheckedCreateWithoutCommentInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutCommentInput
    upsert?: ItemsUpsertWithoutCommentInput
    connect?: ItemsWhereUniqueInput
    update?: XOR<XOR<ItemsUpdateToOneWithWhereWithoutCommentInput, ItemsUpdateWithoutCommentInput>, ItemsUncheckedUpdateWithoutCommentInput>
  }

  export type UsersCreateNestedOneWithoutLikeInput = {
    create?: XOR<UsersCreateWithoutLikeInput, UsersUncheckedCreateWithoutLikeInput>
    connectOrCreate?: UsersCreateOrConnectWithoutLikeInput
    connect?: UsersWhereUniqueInput
  }

  export type ItemsCreateNestedOneWithoutLikeInput = {
    create?: XOR<ItemsCreateWithoutLikeInput, ItemsUncheckedCreateWithoutLikeInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutLikeInput
    connect?: ItemsWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutLikeNestedInput = {
    create?: XOR<UsersCreateWithoutLikeInput, UsersUncheckedCreateWithoutLikeInput>
    connectOrCreate?: UsersCreateOrConnectWithoutLikeInput
    upsert?: UsersUpsertWithoutLikeInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutLikeInput, UsersUpdateWithoutLikeInput>, UsersUncheckedUpdateWithoutLikeInput>
  }

  export type ItemsUpdateOneRequiredWithoutLikeNestedInput = {
    create?: XOR<ItemsCreateWithoutLikeInput, ItemsUncheckedCreateWithoutLikeInput>
    connectOrCreate?: ItemsCreateOrConnectWithoutLikeInput
    upsert?: ItemsUpsertWithoutLikeInput
    connect?: ItemsWhereUniqueInput
    update?: XOR<XOR<ItemsUpdateToOneWithWhereWithoutLikeInput, ItemsUpdateWithoutLikeInput>, ItemsUncheckedUpdateWithoutLikeInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumuser_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_statusFilter<$PrismaModel> | $Enums.user_status
  }

  export type NestedEnumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumuser_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_status[] | ListEnumuser_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_statusWithAggregatesFilter<$PrismaModel> | $Enums.user_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_statusFilter<$PrismaModel>
    _max?: NestedEnumuser_statusFilter<$PrismaModel>
  }

  export type NestedEnumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CollectionsCreateWithoutUserInput = {
    name: string
    description?: string | null
    image_url: string
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    category: CategoriesCreateNestedOneWithoutCollectionInput
    Item?: ItemsCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    category_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    Item?: ItemsUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsCreateOrConnectWithoutUserInput = {
    where: CollectionsWhereUniqueInput
    create: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput>
  }

  export type CollectionsCreateManyUserInputEnvelope = {
    data: CollectionsCreateManyUserInput | CollectionsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CommentsCreateWithoutUserInput = {
    content: string
    item: ItemsCreateNestedOneWithoutCommentInput
  }

  export type CommentsUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    item_id: number
  }

  export type CommentsCreateOrConnectWithoutUserInput = {
    where: CommentsWhereUniqueInput
    create: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput>
  }

  export type CommentsCreateManyUserInputEnvelope = {
    data: CommentsCreateManyUserInput | CommentsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type LikesCreateWithoutUserInput = {
    item: ItemsCreateNestedOneWithoutLikeInput
  }

  export type LikesUncheckedCreateWithoutUserInput = {
    id?: number
    item_id: number
  }

  export type LikesCreateOrConnectWithoutUserInput = {
    where: LikesWhereUniqueInput
    create: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput>
  }

  export type LikesCreateManyUserInputEnvelope = {
    data: LikesCreateManyUserInput | LikesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CollectionsUpsertWithWhereUniqueWithoutUserInput = {
    where: CollectionsWhereUniqueInput
    update: XOR<CollectionsUpdateWithoutUserInput, CollectionsUncheckedUpdateWithoutUserInput>
    create: XOR<CollectionsCreateWithoutUserInput, CollectionsUncheckedCreateWithoutUserInput>
  }

  export type CollectionsUpdateWithWhereUniqueWithoutUserInput = {
    where: CollectionsWhereUniqueInput
    data: XOR<CollectionsUpdateWithoutUserInput, CollectionsUncheckedUpdateWithoutUserInput>
  }

  export type CollectionsUpdateManyWithWhereWithoutUserInput = {
    where: CollectionsScalarWhereInput
    data: XOR<CollectionsUpdateManyMutationInput, CollectionsUncheckedUpdateManyWithoutUserInput>
  }

  export type CollectionsScalarWhereInput = {
    AND?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
    OR?: CollectionsScalarWhereInput[]
    NOT?: CollectionsScalarWhereInput | CollectionsScalarWhereInput[]
    id?: IntFilter<"Collections"> | number
    name?: StringFilter<"Collections"> | string
    description?: StringNullableFilter<"Collections"> | string | null
    image_url?: StringFilter<"Collections"> | string
    user_id?: IntFilter<"Collections"> | number
    category_id?: IntFilter<"Collections"> | number
    custom_string1_state?: BoolFilter<"Collections"> | boolean
    custom_string1_name?: StringNullableFilter<"Collections"> | string | null
    custom_string2_state?: BoolFilter<"Collections"> | boolean
    custom_string2_name?: StringNullableFilter<"Collections"> | string | null
    custom_string3_state?: BoolFilter<"Collections"> | boolean
    custom_string3_name?: StringNullableFilter<"Collections"> | string | null
    custom_int1_state?: BoolFilter<"Collections"> | boolean
    custom_int1_name?: StringNullableFilter<"Collections"> | string | null
    custom_int2_state?: BoolFilter<"Collections"> | boolean
    custom_int2_name?: StringNullableFilter<"Collections"> | string | null
    custom_int3_state?: BoolFilter<"Collections"> | boolean
    custom_int3_name?: StringNullableFilter<"Collections"> | string | null
    custom_text1_state?: BoolFilter<"Collections"> | boolean
    custom_text1_name?: StringNullableFilter<"Collections"> | string | null
    custom_text2_state?: BoolFilter<"Collections"> | boolean
    custom_text2_name?: StringNullableFilter<"Collections"> | string | null
    custom_text3_state?: BoolFilter<"Collections"> | boolean
    custom_text3_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean1_state?: BoolFilter<"Collections"> | boolean
    custom_boolean1_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean2_state?: BoolFilter<"Collections"> | boolean
    custom_boolean2_name?: StringNullableFilter<"Collections"> | string | null
    custom_boolean3_state?: BoolFilter<"Collections"> | boolean
    custom_boolean3_name?: StringNullableFilter<"Collections"> | string | null
    custom_date1_state?: BoolFilter<"Collections"> | boolean
    custom_date1_name?: StringNullableFilter<"Collections"> | string | null
    custom_date2_state?: BoolFilter<"Collections"> | boolean
    custom_date2_name?: StringNullableFilter<"Collections"> | string | null
    custom_date3_state?: BoolFilter<"Collections"> | boolean
    custom_date3_name?: StringNullableFilter<"Collections"> | string | null
  }

  export type CommentsUpsertWithWhereUniqueWithoutUserInput = {
    where: CommentsWhereUniqueInput
    update: XOR<CommentsUpdateWithoutUserInput, CommentsUncheckedUpdateWithoutUserInput>
    create: XOR<CommentsCreateWithoutUserInput, CommentsUncheckedCreateWithoutUserInput>
  }

  export type CommentsUpdateWithWhereUniqueWithoutUserInput = {
    where: CommentsWhereUniqueInput
    data: XOR<CommentsUpdateWithoutUserInput, CommentsUncheckedUpdateWithoutUserInput>
  }

  export type CommentsUpdateManyWithWhereWithoutUserInput = {
    where: CommentsScalarWhereInput
    data: XOR<CommentsUpdateManyMutationInput, CommentsUncheckedUpdateManyWithoutUserInput>
  }

  export type CommentsScalarWhereInput = {
    AND?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
    OR?: CommentsScalarWhereInput[]
    NOT?: CommentsScalarWhereInput | CommentsScalarWhereInput[]
    id?: IntFilter<"Comments"> | number
    content?: StringFilter<"Comments"> | string
    user_id?: IntFilter<"Comments"> | number
    item_id?: IntFilter<"Comments"> | number
  }

  export type LikesUpsertWithWhereUniqueWithoutUserInput = {
    where: LikesWhereUniqueInput
    update: XOR<LikesUpdateWithoutUserInput, LikesUncheckedUpdateWithoutUserInput>
    create: XOR<LikesCreateWithoutUserInput, LikesUncheckedCreateWithoutUserInput>
  }

  export type LikesUpdateWithWhereUniqueWithoutUserInput = {
    where: LikesWhereUniqueInput
    data: XOR<LikesUpdateWithoutUserInput, LikesUncheckedUpdateWithoutUserInput>
  }

  export type LikesUpdateManyWithWhereWithoutUserInput = {
    where: LikesScalarWhereInput
    data: XOR<LikesUpdateManyMutationInput, LikesUncheckedUpdateManyWithoutUserInput>
  }

  export type LikesScalarWhereInput = {
    AND?: LikesScalarWhereInput | LikesScalarWhereInput[]
    OR?: LikesScalarWhereInput[]
    NOT?: LikesScalarWhereInput | LikesScalarWhereInput[]
    id?: IntFilter<"Likes"> | number
    user_id?: IntFilter<"Likes"> | number
    item_id?: IntFilter<"Likes"> | number
  }

  export type CollectionsCreateWithoutCategoryInput = {
    name: string
    description?: string | null
    image_url: string
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    User: UsersCreateNestedOneWithoutCollectionInput
    Item?: ItemsCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsUncheckedCreateWithoutCategoryInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    user_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    Item?: ItemsUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionsCreateOrConnectWithoutCategoryInput = {
    where: CollectionsWhereUniqueInput
    create: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput>
  }

  export type CollectionsCreateManyCategoryInputEnvelope = {
    data: CollectionsCreateManyCategoryInput | CollectionsCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CollectionsUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CollectionsWhereUniqueInput
    update: XOR<CollectionsUpdateWithoutCategoryInput, CollectionsUncheckedUpdateWithoutCategoryInput>
    create: XOR<CollectionsCreateWithoutCategoryInput, CollectionsUncheckedCreateWithoutCategoryInput>
  }

  export type CollectionsUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CollectionsWhereUniqueInput
    data: XOR<CollectionsUpdateWithoutCategoryInput, CollectionsUncheckedUpdateWithoutCategoryInput>
  }

  export type CollectionsUpdateManyWithWhereWithoutCategoryInput = {
    where: CollectionsScalarWhereInput
    data: XOR<CollectionsUpdateManyMutationInput, CollectionsUncheckedUpdateManyWithoutCategoryInput>
  }

  export type UsersCreateWithoutCollectionInput = {
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Comment?: CommentsCreateNestedManyWithoutUserInput
    Like?: LikesCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutCollectionInput = {
    id?: number
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Comment?: CommentsUncheckedCreateNestedManyWithoutUserInput
    Like?: LikesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutCollectionInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCollectionInput, UsersUncheckedCreateWithoutCollectionInput>
  }

  export type CategoriesCreateWithoutCollectionInput = {
    category_name: string
  }

  export type CategoriesUncheckedCreateWithoutCollectionInput = {
    id?: number
    category_name: string
  }

  export type CategoriesCreateOrConnectWithoutCollectionInput = {
    where: CategoriesWhereUniqueInput
    create: XOR<CategoriesCreateWithoutCollectionInput, CategoriesUncheckedCreateWithoutCollectionInput>
  }

  export type ItemsCreateWithoutCollectionInput = {
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsCreateNestedManyWithoutItemsInput
    Comment?: CommentsCreateNestedManyWithoutItemInput
    Like?: LikesCreateNestedManyWithoutItemInput
  }

  export type ItemsUncheckedCreateWithoutCollectionInput = {
    id?: number
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsUncheckedCreateNestedManyWithoutItemsInput
    Comment?: CommentsUncheckedCreateNestedManyWithoutItemInput
    Like?: LikesUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemsCreateOrConnectWithoutCollectionInput = {
    where: ItemsWhereUniqueInput
    create: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput>
  }

  export type ItemsCreateManyCollectionInputEnvelope = {
    data: ItemsCreateManyCollectionInput | ItemsCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutCollectionInput = {
    update: XOR<UsersUpdateWithoutCollectionInput, UsersUncheckedUpdateWithoutCollectionInput>
    create: XOR<UsersCreateWithoutCollectionInput, UsersUncheckedCreateWithoutCollectionInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCollectionInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCollectionInput, UsersUncheckedUpdateWithoutCollectionInput>
  }

  export type UsersUpdateWithoutCollectionInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Comment?: CommentsUpdateManyWithoutUserNestedInput
    Like?: LikesUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Comment?: CommentsUncheckedUpdateManyWithoutUserNestedInput
    Like?: LikesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CategoriesUpsertWithoutCollectionInput = {
    update: XOR<CategoriesUpdateWithoutCollectionInput, CategoriesUncheckedUpdateWithoutCollectionInput>
    create: XOR<CategoriesCreateWithoutCollectionInput, CategoriesUncheckedCreateWithoutCollectionInput>
    where?: CategoriesWhereInput
  }

  export type CategoriesUpdateToOneWithWhereWithoutCollectionInput = {
    where?: CategoriesWhereInput
    data: XOR<CategoriesUpdateWithoutCollectionInput, CategoriesUncheckedUpdateWithoutCollectionInput>
  }

  export type CategoriesUpdateWithoutCollectionInput = {
    category_name?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriesUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
  }

  export type ItemsUpsertWithWhereUniqueWithoutCollectionInput = {
    where: ItemsWhereUniqueInput
    update: XOR<ItemsUpdateWithoutCollectionInput, ItemsUncheckedUpdateWithoutCollectionInput>
    create: XOR<ItemsCreateWithoutCollectionInput, ItemsUncheckedCreateWithoutCollectionInput>
  }

  export type ItemsUpdateWithWhereUniqueWithoutCollectionInput = {
    where: ItemsWhereUniqueInput
    data: XOR<ItemsUpdateWithoutCollectionInput, ItemsUncheckedUpdateWithoutCollectionInput>
  }

  export type ItemsUpdateManyWithWhereWithoutCollectionInput = {
    where: ItemsScalarWhereInput
    data: XOR<ItemsUpdateManyMutationInput, ItemsUncheckedUpdateManyWithoutCollectionInput>
  }

  export type ItemsScalarWhereInput = {
    AND?: ItemsScalarWhereInput | ItemsScalarWhereInput[]
    OR?: ItemsScalarWhereInput[]
    NOT?: ItemsScalarWhereInput | ItemsScalarWhereInput[]
    id?: IntFilter<"Items"> | number
    name?: StringFilter<"Items"> | string
    collection_id?: IntFilter<"Items"> | number
    custom_string1_value?: StringNullableFilter<"Items"> | string | null
    custom_string2_value?: StringNullableFilter<"Items"> | string | null
    custom_string3_value?: StringNullableFilter<"Items"> | string | null
    custom_int1_value?: IntNullableFilter<"Items"> | number | null
    custom_int2_value?: IntNullableFilter<"Items"> | number | null
    custom_int3_value?: IntNullableFilter<"Items"> | number | null
    custom_text1_value?: StringNullableFilter<"Items"> | string | null
    custom_text2_value?: StringNullableFilter<"Items"> | string | null
    custom_text3_value?: StringNullableFilter<"Items"> | string | null
    custom_boolean1_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean2_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_boolean3_value?: BoolNullableFilter<"Items"> | boolean | null
    custom_date1_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date2_value?: DateTimeNullableFilter<"Items"> | Date | string | null
    custom_date3_value?: DateTimeNullableFilter<"Items"> | Date | string | null
  }

  export type ItemTagsCreateWithoutTagsInput = {
    items: ItemsCreateNestedOneWithoutTagsInput
  }

  export type ItemTagsUncheckedCreateWithoutTagsInput = {
    item_id: number
  }

  export type ItemTagsCreateOrConnectWithoutTagsInput = {
    where: ItemTagsWhereUniqueInput
    create: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput>
  }

  export type ItemTagsCreateManyTagsInputEnvelope = {
    data: ItemTagsCreateManyTagsInput | ItemTagsCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type ItemTagsUpsertWithWhereUniqueWithoutTagsInput = {
    where: ItemTagsWhereUniqueInput
    update: XOR<ItemTagsUpdateWithoutTagsInput, ItemTagsUncheckedUpdateWithoutTagsInput>
    create: XOR<ItemTagsCreateWithoutTagsInput, ItemTagsUncheckedCreateWithoutTagsInput>
  }

  export type ItemTagsUpdateWithWhereUniqueWithoutTagsInput = {
    where: ItemTagsWhereUniqueInput
    data: XOR<ItemTagsUpdateWithoutTagsInput, ItemTagsUncheckedUpdateWithoutTagsInput>
  }

  export type ItemTagsUpdateManyWithWhereWithoutTagsInput = {
    where: ItemTagsScalarWhereInput
    data: XOR<ItemTagsUpdateManyMutationInput, ItemTagsUncheckedUpdateManyWithoutTagsInput>
  }

  export type ItemTagsScalarWhereInput = {
    AND?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
    OR?: ItemTagsScalarWhereInput[]
    NOT?: ItemTagsScalarWhereInput | ItemTagsScalarWhereInput[]
    tag_id?: IntFilter<"ItemTags"> | number
    item_id?: IntFilter<"ItemTags"> | number
  }

  export type TagsCreateWithoutItemsInput = {
    tag_name: string
  }

  export type TagsUncheckedCreateWithoutItemsInput = {
    id?: number
    tag_name: string
  }

  export type TagsCreateOrConnectWithoutItemsInput = {
    where: TagsWhereUniqueInput
    create: XOR<TagsCreateWithoutItemsInput, TagsUncheckedCreateWithoutItemsInput>
  }

  export type ItemsCreateWithoutTagsInput = {
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    collection: CollectionsCreateNestedOneWithoutItemInput
    Comment?: CommentsCreateNestedManyWithoutItemInput
    Like?: LikesCreateNestedManyWithoutItemInput
  }

  export type ItemsUncheckedCreateWithoutTagsInput = {
    id?: number
    name: string
    collection_id: number
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    Comment?: CommentsUncheckedCreateNestedManyWithoutItemInput
    Like?: LikesUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemsCreateOrConnectWithoutTagsInput = {
    where: ItemsWhereUniqueInput
    create: XOR<ItemsCreateWithoutTagsInput, ItemsUncheckedCreateWithoutTagsInput>
  }

  export type TagsUpsertWithoutItemsInput = {
    update: XOR<TagsUpdateWithoutItemsInput, TagsUncheckedUpdateWithoutItemsInput>
    create: XOR<TagsCreateWithoutItemsInput, TagsUncheckedCreateWithoutItemsInput>
    where?: TagsWhereInput
  }

  export type TagsUpdateToOneWithWhereWithoutItemsInput = {
    where?: TagsWhereInput
    data: XOR<TagsUpdateWithoutItemsInput, TagsUncheckedUpdateWithoutItemsInput>
  }

  export type TagsUpdateWithoutItemsInput = {
    tag_name?: StringFieldUpdateOperationsInput | string
  }

  export type TagsUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tag_name?: StringFieldUpdateOperationsInput | string
  }

  export type ItemsUpsertWithoutTagsInput = {
    update: XOR<ItemsUpdateWithoutTagsInput, ItemsUncheckedUpdateWithoutTagsInput>
    create: XOR<ItemsCreateWithoutTagsInput, ItemsUncheckedCreateWithoutTagsInput>
    where?: ItemsWhereInput
  }

  export type ItemsUpdateToOneWithWhereWithoutTagsInput = {
    where?: ItemsWhereInput
    data: XOR<ItemsUpdateWithoutTagsInput, ItemsUncheckedUpdateWithoutTagsInput>
  }

  export type ItemsUpdateWithoutTagsInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionsUpdateOneRequiredWithoutItemNestedInput
    Comment?: CommentsUpdateManyWithoutItemNestedInput
    Like?: LikesUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateWithoutTagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: IntFieldUpdateOperationsInput | number
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Comment?: CommentsUncheckedUpdateManyWithoutItemNestedInput
    Like?: LikesUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemTagsCreateWithoutItemsInput = {
    tags: TagsCreateNestedOneWithoutItemsInput
  }

  export type ItemTagsUncheckedCreateWithoutItemsInput = {
    tag_id: number
  }

  export type ItemTagsCreateOrConnectWithoutItemsInput = {
    where: ItemTagsWhereUniqueInput
    create: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput>
  }

  export type ItemTagsCreateManyItemsInputEnvelope = {
    data: ItemTagsCreateManyItemsInput | ItemTagsCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type CollectionsCreateWithoutItemInput = {
    name: string
    description?: string | null
    image_url: string
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
    User: UsersCreateNestedOneWithoutCollectionInput
    category: CategoriesCreateNestedOneWithoutCollectionInput
  }

  export type CollectionsUncheckedCreateWithoutItemInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    user_id: number
    category_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
  }

  export type CollectionsCreateOrConnectWithoutItemInput = {
    where: CollectionsWhereUniqueInput
    create: XOR<CollectionsCreateWithoutItemInput, CollectionsUncheckedCreateWithoutItemInput>
  }

  export type CommentsCreateWithoutItemInput = {
    content: string
    user: UsersCreateNestedOneWithoutCommentInput
  }

  export type CommentsUncheckedCreateWithoutItemInput = {
    id?: number
    content: string
    user_id: number
  }

  export type CommentsCreateOrConnectWithoutItemInput = {
    where: CommentsWhereUniqueInput
    create: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput>
  }

  export type CommentsCreateManyItemInputEnvelope = {
    data: CommentsCreateManyItemInput | CommentsCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type LikesCreateWithoutItemInput = {
    user: UsersCreateNestedOneWithoutLikeInput
  }

  export type LikesUncheckedCreateWithoutItemInput = {
    id?: number
    user_id: number
  }

  export type LikesCreateOrConnectWithoutItemInput = {
    where: LikesWhereUniqueInput
    create: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput>
  }

  export type LikesCreateManyItemInputEnvelope = {
    data: LikesCreateManyItemInput | LikesCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type ItemTagsUpsertWithWhereUniqueWithoutItemsInput = {
    where: ItemTagsWhereUniqueInput
    update: XOR<ItemTagsUpdateWithoutItemsInput, ItemTagsUncheckedUpdateWithoutItemsInput>
    create: XOR<ItemTagsCreateWithoutItemsInput, ItemTagsUncheckedCreateWithoutItemsInput>
  }

  export type ItemTagsUpdateWithWhereUniqueWithoutItemsInput = {
    where: ItemTagsWhereUniqueInput
    data: XOR<ItemTagsUpdateWithoutItemsInput, ItemTagsUncheckedUpdateWithoutItemsInput>
  }

  export type ItemTagsUpdateManyWithWhereWithoutItemsInput = {
    where: ItemTagsScalarWhereInput
    data: XOR<ItemTagsUpdateManyMutationInput, ItemTagsUncheckedUpdateManyWithoutItemsInput>
  }

  export type CollectionsUpsertWithoutItemInput = {
    update: XOR<CollectionsUpdateWithoutItemInput, CollectionsUncheckedUpdateWithoutItemInput>
    create: XOR<CollectionsCreateWithoutItemInput, CollectionsUncheckedCreateWithoutItemInput>
    where?: CollectionsWhereInput
  }

  export type CollectionsUpdateToOneWithWhereWithoutItemInput = {
    where?: CollectionsWhereInput
    data: XOR<CollectionsUpdateWithoutItemInput, CollectionsUncheckedUpdateWithoutItemInput>
  }

  export type CollectionsUpdateWithoutItemInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UsersUpdateOneRequiredWithoutCollectionNestedInput
    category?: CategoriesUpdateOneRequiredWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentsUpsertWithWhereUniqueWithoutItemInput = {
    where: CommentsWhereUniqueInput
    update: XOR<CommentsUpdateWithoutItemInput, CommentsUncheckedUpdateWithoutItemInput>
    create: XOR<CommentsCreateWithoutItemInput, CommentsUncheckedCreateWithoutItemInput>
  }

  export type CommentsUpdateWithWhereUniqueWithoutItemInput = {
    where: CommentsWhereUniqueInput
    data: XOR<CommentsUpdateWithoutItemInput, CommentsUncheckedUpdateWithoutItemInput>
  }

  export type CommentsUpdateManyWithWhereWithoutItemInput = {
    where: CommentsScalarWhereInput
    data: XOR<CommentsUpdateManyMutationInput, CommentsUncheckedUpdateManyWithoutItemInput>
  }

  export type LikesUpsertWithWhereUniqueWithoutItemInput = {
    where: LikesWhereUniqueInput
    update: XOR<LikesUpdateWithoutItemInput, LikesUncheckedUpdateWithoutItemInput>
    create: XOR<LikesCreateWithoutItemInput, LikesUncheckedCreateWithoutItemInput>
  }

  export type LikesUpdateWithWhereUniqueWithoutItemInput = {
    where: LikesWhereUniqueInput
    data: XOR<LikesUpdateWithoutItemInput, LikesUncheckedUpdateWithoutItemInput>
  }

  export type LikesUpdateManyWithWhereWithoutItemInput = {
    where: LikesScalarWhereInput
    data: XOR<LikesUpdateManyMutationInput, LikesUncheckedUpdateManyWithoutItemInput>
  }

  export type UsersCreateWithoutCommentInput = {
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsCreateNestedManyWithoutUserInput
    Like?: LikesCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutCommentInput = {
    id?: number
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsUncheckedCreateNestedManyWithoutUserInput
    Like?: LikesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutCommentInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCommentInput, UsersUncheckedCreateWithoutCommentInput>
  }

  export type ItemsCreateWithoutCommentInput = {
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsCreateNestedManyWithoutItemsInput
    collection: CollectionsCreateNestedOneWithoutItemInput
    Like?: LikesCreateNestedManyWithoutItemInput
  }

  export type ItemsUncheckedCreateWithoutCommentInput = {
    id?: number
    name: string
    collection_id: number
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsUncheckedCreateNestedManyWithoutItemsInput
    Like?: LikesUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemsCreateOrConnectWithoutCommentInput = {
    where: ItemsWhereUniqueInput
    create: XOR<ItemsCreateWithoutCommentInput, ItemsUncheckedCreateWithoutCommentInput>
  }

  export type UsersUpsertWithoutCommentInput = {
    update: XOR<UsersUpdateWithoutCommentInput, UsersUncheckedUpdateWithoutCommentInput>
    create: XOR<UsersCreateWithoutCommentInput, UsersUncheckedCreateWithoutCommentInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCommentInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCommentInput, UsersUncheckedUpdateWithoutCommentInput>
  }

  export type UsersUpdateWithoutCommentInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUpdateManyWithoutUserNestedInput
    Like?: LikesUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUncheckedUpdateManyWithoutUserNestedInput
    Like?: LikesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ItemsUpsertWithoutCommentInput = {
    update: XOR<ItemsUpdateWithoutCommentInput, ItemsUncheckedUpdateWithoutCommentInput>
    create: XOR<ItemsCreateWithoutCommentInput, ItemsUncheckedCreateWithoutCommentInput>
    where?: ItemsWhereInput
  }

  export type ItemsUpdateToOneWithWhereWithoutCommentInput = {
    where?: ItemsWhereInput
    data: XOR<ItemsUpdateWithoutCommentInput, ItemsUncheckedUpdateWithoutCommentInput>
  }

  export type ItemsUpdateWithoutCommentInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUpdateManyWithoutItemsNestedInput
    collection?: CollectionsUpdateOneRequiredWithoutItemNestedInput
    Like?: LikesUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: IntFieldUpdateOperationsInput | number
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUncheckedUpdateManyWithoutItemsNestedInput
    Like?: LikesUncheckedUpdateManyWithoutItemNestedInput
  }

  export type UsersCreateWithoutLikeInput = {
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsCreateNestedManyWithoutUserInput
    Comment?: CommentsCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutLikeInput = {
    id?: number
    username: string
    password: string
    email: string
    status?: $Enums.user_status
    role?: $Enums.user_role
    Collection?: CollectionsUncheckedCreateNestedManyWithoutUserInput
    Comment?: CommentsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutLikeInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutLikeInput, UsersUncheckedCreateWithoutLikeInput>
  }

  export type ItemsCreateWithoutLikeInput = {
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsCreateNestedManyWithoutItemsInput
    collection: CollectionsCreateNestedOneWithoutItemInput
    Comment?: CommentsCreateNestedManyWithoutItemInput
  }

  export type ItemsUncheckedCreateWithoutLikeInput = {
    id?: number
    name: string
    collection_id: number
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
    tags?: ItemTagsUncheckedCreateNestedManyWithoutItemsInput
    Comment?: CommentsUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemsCreateOrConnectWithoutLikeInput = {
    where: ItemsWhereUniqueInput
    create: XOR<ItemsCreateWithoutLikeInput, ItemsUncheckedCreateWithoutLikeInput>
  }

  export type UsersUpsertWithoutLikeInput = {
    update: XOR<UsersUpdateWithoutLikeInput, UsersUncheckedUpdateWithoutLikeInput>
    create: XOR<UsersCreateWithoutLikeInput, UsersUncheckedCreateWithoutLikeInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutLikeInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutLikeInput, UsersUncheckedUpdateWithoutLikeInput>
  }

  export type UsersUpdateWithoutLikeInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUpdateManyWithoutUserNestedInput
    Comment?: CommentsUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutLikeInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    Collection?: CollectionsUncheckedUpdateManyWithoutUserNestedInput
    Comment?: CommentsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ItemsUpsertWithoutLikeInput = {
    update: XOR<ItemsUpdateWithoutLikeInput, ItemsUncheckedUpdateWithoutLikeInput>
    create: XOR<ItemsCreateWithoutLikeInput, ItemsUncheckedCreateWithoutLikeInput>
    where?: ItemsWhereInput
  }

  export type ItemsUpdateToOneWithWhereWithoutLikeInput = {
    where?: ItemsWhereInput
    data: XOR<ItemsUpdateWithoutLikeInput, ItemsUncheckedUpdateWithoutLikeInput>
  }

  export type ItemsUpdateWithoutLikeInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUpdateManyWithoutItemsNestedInput
    collection?: CollectionsUpdateOneRequiredWithoutItemNestedInput
    Comment?: CommentsUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateWithoutLikeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: IntFieldUpdateOperationsInput | number
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUncheckedUpdateManyWithoutItemsNestedInput
    Comment?: CommentsUncheckedUpdateManyWithoutItemNestedInput
  }

  export type CollectionsCreateManyUserInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    category_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
  }

  export type CommentsCreateManyUserInput = {
    id?: number
    content: string
    item_id: number
  }

  export type LikesCreateManyUserInput = {
    id?: number
    item_id: number
  }

  export type CollectionsUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    category?: CategoriesUpdateOneRequiredWithoutCollectionNestedInput
    Item?: ItemsUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    category_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    Item?: ItemsUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    category_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentsUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    item?: ItemsUpdateOneRequiredWithoutCommentNestedInput
  }

  export type CommentsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type CommentsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesUpdateWithoutUserInput = {
    item?: ItemsUpdateOneRequiredWithoutLikeNestedInput
  }

  export type LikesUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type CollectionsCreateManyCategoryInput = {
    id?: number
    name: string
    description?: string | null
    image_url: string
    user_id: number
    custom_string1_state?: boolean
    custom_string1_name?: string | null
    custom_string2_state?: boolean
    custom_string2_name?: string | null
    custom_string3_state?: boolean
    custom_string3_name?: string | null
    custom_int1_state?: boolean
    custom_int1_name?: string | null
    custom_int2_state?: boolean
    custom_int2_name?: string | null
    custom_int3_state?: boolean
    custom_int3_name?: string | null
    custom_text1_state?: boolean
    custom_text1_name?: string | null
    custom_text2_state?: boolean
    custom_text2_name?: string | null
    custom_text3_state?: boolean
    custom_text3_name?: string | null
    custom_boolean1_state?: boolean
    custom_boolean1_name?: string | null
    custom_boolean2_state?: boolean
    custom_boolean2_name?: string | null
    custom_boolean3_state?: boolean
    custom_boolean3_name?: string | null
    custom_date1_state?: boolean
    custom_date1_name?: string | null
    custom_date2_state?: boolean
    custom_date2_name?: string | null
    custom_date3_state?: boolean
    custom_date3_name?: string | null
  }

  export type CollectionsUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    User?: UsersUpdateOneRequiredWithoutCollectionNestedInput
    Item?: ItemsUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
    Item?: ItemsUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionsUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    custom_string1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_string3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_int3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_text3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_boolean3_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date1_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date1_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date2_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date2_name?: NullableStringFieldUpdateOperationsInput | string | null
    custom_date3_state?: BoolFieldUpdateOperationsInput | boolean
    custom_date3_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ItemsCreateManyCollectionInput = {
    id?: number
    name: string
    custom_string1_value?: string | null
    custom_string2_value?: string | null
    custom_string3_value?: string | null
    custom_int1_value?: number | null
    custom_int2_value?: number | null
    custom_int3_value?: number | null
    custom_text1_value?: string | null
    custom_text2_value?: string | null
    custom_text3_value?: string | null
    custom_boolean1_value?: boolean | null
    custom_boolean2_value?: boolean | null
    custom_boolean3_value?: boolean | null
    custom_date1_value?: Date | string | null
    custom_date2_value?: Date | string | null
    custom_date3_value?: Date | string | null
  }

  export type ItemsUpdateWithoutCollectionInput = {
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUpdateManyWithoutItemsNestedInput
    Comment?: CommentsUpdateManyWithoutItemNestedInput
    Like?: LikesUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tags?: ItemTagsUncheckedUpdateManyWithoutItemsNestedInput
    Comment?: CommentsUncheckedUpdateManyWithoutItemNestedInput
    Like?: LikesUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemsUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    custom_string1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_string3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_int1_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int2_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_int3_value?: NullableIntFieldUpdateOperationsInput | number | null
    custom_text1_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text2_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_text3_value?: NullableStringFieldUpdateOperationsInput | string | null
    custom_boolean1_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean2_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_boolean3_value?: NullableBoolFieldUpdateOperationsInput | boolean | null
    custom_date1_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date2_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_date3_value?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemTagsCreateManyTagsInput = {
    item_id: number
  }

  export type ItemTagsUpdateWithoutTagsInput = {
    items?: ItemsUpdateOneRequiredWithoutTagsNestedInput
  }

  export type ItemTagsUncheckedUpdateWithoutTagsInput = {
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type ItemTagsUncheckedUpdateManyWithoutTagsInput = {
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type ItemTagsCreateManyItemsInput = {
    tag_id: number
  }

  export type CommentsCreateManyItemInput = {
    id?: number
    content: string
    user_id: number
  }

  export type LikesCreateManyItemInput = {
    id?: number
    user_id: number
  }

  export type ItemTagsUpdateWithoutItemsInput = {
    tags?: TagsUpdateOneRequiredWithoutItemsNestedInput
  }

  export type ItemTagsUncheckedUpdateWithoutItemsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type ItemTagsUncheckedUpdateManyWithoutItemsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type CommentsUpdateWithoutItemInput = {
    content?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutCommentNestedInput
  }

  export type CommentsUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type CommentsUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesUpdateWithoutItemInput = {
    user?: UsersUpdateOneRequiredWithoutLikeNestedInput
  }

  export type LikesUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type LikesUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriesCountOutputTypeDefaultArgs instead
     */
    export type CategoriesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CollectionsCountOutputTypeDefaultArgs instead
     */
    export type CollectionsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CollectionsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagsCountOutputTypeDefaultArgs instead
     */
    export type TagsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ItemsCountOutputTypeDefaultArgs instead
     */
    export type ItemsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ItemsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersDefaultArgs instead
     */
    export type UsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriesDefaultArgs instead
     */
    export type CategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CollectionsDefaultArgs instead
     */
    export type CollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CollectionsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagsDefaultArgs instead
     */
    export type TagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ItemTagsDefaultArgs instead
     */
    export type ItemTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ItemTagsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ItemsDefaultArgs instead
     */
    export type ItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ItemsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CommentsDefaultArgs instead
     */
    export type CommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CommentsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LikesDefaultArgs instead
     */
    export type LikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LikesDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}